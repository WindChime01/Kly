<?phpClass YuanqiAction extends CommonAction{		public function index(){    	$userid = session("mid");    	$yuanqi = floatval(M("member")->where(array("id"=>$userid))->getField("yuanqi"));    	$today = strtotime(date('Y-m-d',strtotime('0 day')));    	$where = array(  		    'member'	=> session('username'),  		    'addtime'	=> array("gt",strtotime("-1 week",$today))        );    	if($_POST != null){	      	$page = $_POST['page']?$_POST['page']:1;	      	$time = $_POST['time'];	      	if ($_POST['time'] != null) {	      		if ($time == 15) {	        		$bofore = strtotime("-2 week",$today);	      		}	      		if ($time == 30) {	       			$bofore = strtotime("-1 month",$today);	      		}	      		if ($time == 90) {	        		$bofore = strtotime("-3 month",$today);	      		}	      		$where['addtime'] = array("gt",$bofore);		      	$list = M('yuanqidetail')->where($where)->order('addtime desc')->page($page.',10')->select();	      	}else{	      		$list = M('yuanqidetail')->where($where)->order('addtime desc')->page($page.',10')->select();	      	}	      	$this->success($list);	    }	    $list = M('yuanqidetail')->where($where)->order('addtime desc')->limit(10)->select();    	$this->assign("userid",$userid);    	$this->assign("yuanqi",$yuanqi);    	$this->assign("detail",$list);    	$this->display();    }        public function yuanqi(){    	$userid = session("mid");    	$yuanqi = floatval(M("member")->where(array("id"=>$userid))->getField("yuanqi"));    	$today = strtotime(date('Y-m-d',strtotime('0 day')));    	$where = array(  		    'member'	=> session('username'),  		    'addtime'	=> array("gt",strtotime("-1 week",$today))        );    	if($_POST != null){	      	$page = $_POST['page']?$_POST['page']:1;	      	$time = $_POST['time'];	      	if ($_POST['time'] != null) {	      		if ($time == 15) {	        		$bofore = strtotime("-2 week",$today);	      		}	      		if ($time == 30) {	       			$bofore = strtotime("-1 month",$today);	      		}	      		if ($time == 90) {	        		$bofore = strtotime("-3 month",$today);	      		}	      		$where['addtime'] = array("gt",$bofore);		      	$list = M('yuanqidetail')->where($where)->order('addtime desc')->page($page.',10')->select();	      	}else{	      		$list = M('yuanqidetail')->where($where)->order('addtime desc')->page($page.',10')->select();	      	}	      	$this->success($list);	    }	    $list = M('yuanqidetail')->where($where)->order('addtime desc')->limit(10)->select();    	$this->assign("userid",$userid);    	$this->assign("yuanqi",$yuanqi);    	$this->assign("detail",$list);    	$this->display();    }        public function ipfs(){    	$userid = session("mid");    	$info = M("member")->where(array("id"=>$userid))->find();    	$ipfs = M("member")->where(array("id"=>$userid))->getField("ipfs");    	$today = strtotime(date('Y-m-d',strtotime('0 day')));    	$where = array(  		    'member'	=> session('username'),  		    'addtime'	=> array("gt",strtotime("-1 week",$today))        );    	if($_POST != null){	      	$page = $_POST['page']?$_POST['page']:1;	      	$time = $_POST['time'];	      	if ($_POST['time'] != null) {	      		if ($time == 15) {	        		$bofore = strtotime("-2 week",$today);	      		}	      		if ($time == 30) {	       			$bofore = strtotime("-1 month",$today);	      		}	      		if ($time == 90) {	        		$bofore = strtotime("-3 month",$today);	      		}	      		$where['addtime'] = array("gt",$bofore);		      	$list = M('jinbidetail')->where($where)->order('addtime desc')->page($page.',10')->select();	      	}else{	      		$list = M('jinbidetail')->where($where)->order('addtime desc')->page($page.',10')->select();	      	}	      	$this->success($list);	    }	    $list = M('jinbidetail')->where($where)->order('addtime desc')->limit(10)->select();    	$this->assign("userid",$userid);    	$this->assign("ipfs",$ipfs);    	$this->assign("detail",$list);    	$this->display();    }        //查询用户是否设置了收款码    public function checkskm(){    	$check = M("member_skm")->where(array("user_id"=>session("mid")))->find();    	if (empty($check)){    		$this->error("对不起，您尚未设置收款信息。点击确定即可设置收款信息");    	}else{    		$this->success("有收款设置");    	}    }        public function skm_post(){    	$get = $_POST['data'];    	// if ($get['address'] == ""){    	// 	$this->ajaxReturn(array("msg"=>"请输入交易地址","success"=>0));    	// }    	// if ($get['alipay_name'] == ""){    	// 	$this->ajaxReturn(array("msg"=>"请输入支付宝账号","success"=>0));    	// }    	// if ($get['wechat'] != ""){    	// 	$data['wechat'] = $get['wechat'];    	// }    	$data = [    		"user_id"		=> session("mid"),    		"username"		=> session("username"),    		"wechat"		=> $get['wechat'],    		"alipay"		=> $get['alipay'],    		"alipay_name"	=> $get['alipay_name'],    		"bank"			=> $get['bank'],    		"bank_name"		=> $get['bank_name'],    		"bank_branch"	=> $get['bank_branch'],    		"bank_num"		=> $get['bank_num'],    		"address"		=> $get['address'],    		"address_code"	=> $get['address_code']    	];    	$is = M("member_skm")->where(array("user_id"=>session("mid")))->find();    	if (empty($is)){    		$ret = M("member_skm")->add($data);    	}else{    		$ret = M("member_skm")->where(array("user_id"=>session("mid")))->save($data);    	}    	    	if ($ret){    		$this->ajaxReturn(array("msg"=>"修改成功","success"=>1));    	}else{    		$this->ajaxReturn(array("msg"=>"修改失败","success"=>0));    	}    }        public function charge(){    	$get = M("address")->where(array("id"=>1))->find();    	$this->assign("get",$get);    	$this->display();    }        public function withdrawal(){    	$info = $this->memberinfo;    	$this->assign("ipfs",floatval($info['ipfs']));    	$skm = M("member_skm")->where(array("user_id"=>session("mid")))->find();    	$this->assign("skm",$skm);    	$this->display();    }        public function withdrawal_post(){    	$get = $_POST;    	// dump($get);die;    // 	$this->ajaxReturn(array("msg"=>"暂未开放","success"=>0));    	$userinfo = $this->memberinfo;    	$verify = ejmm($get['ejmm'],session("mid"));    	if ($verify != 1){    		$this->ajaxReturn(array("msg"=>"密码错误","success"=>0));    	}    	    	$verify_code = trim($get['verify']);    	if(!$verify_code){            $this->ajaxReturn(array("msg"=>"请填写验证码！","success"=>0));        }        if($userinfo['mobile']){	            $check_code = sms_code_verify($userinfo['mobile'],$verify_code,session_id());            if($check_code['status'] != 1){                $this->ajaxReturn(array("msg"=>"手机验证码不匹配或已超时！","success"=>0));            }        } else if($userinfo['email']) {            $check_code = session(session_id().'code');            $realemail = session(session_id().'email');            if($check_code != md5($verify_code.'mima') || $realemail != $userinfo['email']) {                $this->ajaxReturn(array("msg"=>"邮箱验证码不匹配或已超时！","success"=>0));            }        } else {            $this->ajaxReturn(array("msg"=>"你的账号异常，请联系客服！","success"=>0));        }    	    	$bitype = ["ipfs","yuanqi","usdt"];    	if (!in_array($get['bitype'],$bitype)){    		$this->ajaxReturn(array("msg"=>"提现币种有误，请重新选择","success"=>0));    	}    	if (!is_numeric($get['amount'])){    		$this->ajaxReturn(array("msg"=>"输入数量有误，请重新输入","success"=>0));    	}    	    	$isskm = M("member_skm")->where(array("user_id"=>session("mid")))->find();    	// if (empty($isskm)){    	// 	$this->ajaxReturn(array("msg"=>"您未设置收款码，无法提现","success"=>0));    	// }    	if ($get['bitype'] == "ipfs"){    		if ($userinfo['fil'] < $get['amount']){    			$this->ajaxReturn(array("msg"=>"您的fil可提余额不足","success"=>0));    		}    		if (C("mint") > $get['amount']){    			$this->ajaxReturn(array("msg"=>"提币的数量不得少于".C("mint"),"success"=>0));    		}    		$find = M("withdrawal")->where(array("user_id"=>session("mid"),"status"=>0,"bi"=>"ipfs"))->count();	    	if ($find > 0){	    		$this->ajaxReturn(array("msg"=>"您已经有一条提币申请，请勿重复提交","success"=>0));	    	}	    	if ($get['address'] == ""){	    		$this->ajaxReturn(array("msg"=>"请填写收款地址","success"=>0));	    	}	    	if ($get['address_code'] == ""){	    		$this->ajaxReturn(array("msg"=>"请上传地址收款二维码","success"=>0));	    	}    		$rate = 1;    		$sxf = C("sxf2");    		$get['type'] = "address";    		$total_amount = floor(($get['amount'] * $rate - $sxf) * 10000) / 10000;    	}else if ($get['bitype'] == "yuanqi"){	    	if ($get['type'] == ""){	    		$this->ajaxReturn(array("msg"=>"请选择提现方式","success"=>0));	    	}	    	if ($userinfo['yuanqi'] < $get['amount']){	    		$this->ajaxReturn(array("msg"=>"您的元气值不足","success"=>0));	    	}	    	if (C("minw") > $get['amount']){    			$this->ajaxReturn(array("msg"=>"提现的数量不得少于".C("minw"),"success"=>0));    		}	    	$tixian = ["bank","wechat","alipay"];	    	if (!in_array($get['type'],$tixian)){	    		$this->ajaxReturn(array("msg"=>"提现方式有误，请重新选择","success"=>0));	    	}	    	if ($isskm['wechat'] == "" && $get['type'] == "wechat"){		//检测是否设置了微信收款码	    		$this->ajaxReturn(array("msg"=>"您未设置微信收款码","success"=>0));	    	}	    	if (($isskm['alipay'] == "" && $isskm['alipay_name'] == "") && $get['type'] == "alipay"){		//检测是否设置了支付宝收款码	    		$this->ajaxReturn(array("msg"=>"您未设置支付宝收款码或支付宝账号","success"=>0));	    	}	    	if ($isskm['bank_num'] == "" && $get['type'] == "bank"){	    		$this->ajaxReturn(array("msg"=>"您未设置银行卡信息","success"=>0));	    	}	    	$find = M("withdrawal")->where(array("user_id"=>session("mid"),"status"=>0,"bi"=>"yuanqi"))->count();	    	if ($find > 0){	    		$this->ajaxReturn(array("msg"=>"您已经有一条提现申请，请勿重复提交","success"=>0));	    	}	    	$rate = C("rate");	    	$sxf = C("sxf");	    	$total_amount = floor($get['amount'] * $rate * (1 - $sxf / 100) * 100) / 100;    	}elseif ($get['bitype'] == "usdt"){    		// if ($userinfo['ipfs'] < $get['amount']){    		// 	$this->ajaxReturn(array("msg"=>"您的fil余额不足","success"=>0));    		// }    		// $find = M("withdrawal")->where(array("user_id"=>session("mid"),"status"=>0,"bi"=>"ipfs"))->count();	    	// if ($find > 0){	    	// 	$this->ajaxReturn(array("msg"=>"您已经有一条提币申请，请勿重复提交","success"=>0));	    	// }	    	if ($get['usdt_address'] == ""){	    		$this->ajaxReturn(array("msg"=>"请填写USDT地址","success"=>0));	    	}	    	if ($get['address_code'] == ""){	    		$this->ajaxReturn(array("msg"=>"请上传USDT收款二维码","success"=>0));	    	}    		$rate = 1;    		$sxf = 0;    		$get['amount'] = 0;    		$get['type'] = "usdtaddress";    		$get['address'] = $get['usdt_address'];    		$total_amount = floor($get['amount'] * $rate * (1 - $sxf / 100) * 10000) / 10000;    	}    	    	    	    	// $istoday = M("withdrawal")->where(array("user_id"=>session("mid"),"addtime"=>array("gt",strtotime("Y-m-d"))))->count();    	// if ($istoday > 0){    	// 	$this->ajaxReturn(array("msg"=>"每日仅可提现一次，请勿重复提交","success"=>0));    	// }    	    	    	$data = [    		'type'		=> $get['paytype'],    		'bi'		=> $get['bitype'],    		'user_id'	=> $userinfo['id'],    		'username'	=> $userinfo['username'],    		'number'	=> $get['amount'],    		'rate'		=> $rate,    		'sxf'		=> $sxf,    		'total'		=> $total_amount,		//这是实际能够拿到的钱    		'address'	=> $get['address'],    		'address_code'	=> $get['address_code'],    		'type'		=> $get['type'],    		'status'	=> 0,    		'addtime'	=> time()    	];    	// dump($data);die;    	if ($get['bitype'] == "ipfs"){    		$bitype = "FIL提币";    	}elseif ($get['bitype'] == "yuanqi"){    		$bitype = "元气值提现";    	}elseif ($get['bitype'] == "usdt"){    		$bitype = "USDT提现";    	}    	    	M()->startTrans();    	$ret = M("withdrawal")->add($data);    	if ($get['bitype'] == "ipfs") {    	    $ret2 = M("member")->where(array("id"=>session("mid")))->setDec('fil',$data['number']);    		if ($sxf != 0){    		    $sxf_nums = $get['amount'] - $total_amount;	    		$desc = $bitype."(含".$sxf_nums."手续费)";	    	}else{	    		$desc = $bitype;	    	}	    		    	$log = jinbi(session("username"),$data['number'],$desc,0,8,'fil');		//提现申请 8    	} elseif ($get['bitype'] == "yuanqi"){    		$ret2 = M("member")->where(array("id"=>session("mid")))->setDec($get['bitype'],$data['number']);    		if ($sxf != 0){    		    $sxf_nums = $get['amount'] - $total_amount;	    		$desc = $bitype."(含".$sxf."手续费)";	    	}else{	    		$desc = $bitype;	    	}	    		    	$log = jinbi(session("username"),$data['number'],$desc,0,8,$get['bitype']);		//提现申请 8    	}else{    		$ret2 = 1;    		$log = 1;    	}    	    	if ($ret && $ret2 && $log){    	    //添加日志操作    		$desc = '会员['.session('username').']提现';    		write_log(session('username'),'member',$desc);    		M()->commit();    		$this->ajaxReturn(array("msg"=>"申请成功，等待管理员操作","success"=>1));    	}else{    		M()->rollback();    		$this0>ajaxReturn(array("申请失败","success"=>0));    	}    }		public function charge_post(){    	$get = $_POST;    	$userinfo = $this->memberinfo;    	// $verify = ejmm($get['ejmm'],session("mid"));	//封装ejmm方法    	// if ($verify != 1){    	// 	$this->ajaxReturn(array("msg"=>"密码错误","success"=>0));    	// }    	if ($get['amount'] == ''){    		$this->ajaxReturn(array("msg"=>"请选择数量","success"=>0));    	}  //  	$amountarr = [299,2388,20000,1000000,8000000,12000000];		// if (!in_array($get['amount'],$amountarr)){		// 	$this->ajaxReturn(array("msg"=>"选择数量有误，请刷新重试","success"=>0));		// }		    	if (!is_numeric($get['amount'])){    		$this->ajaxReturn(array("msg"=>"选择数量有误，请刷新重试","success"=>0));    	}    	if ($get['image'] == ""){    		$this->ajaxReturn(array("msg"=>"请上传付款凭证","success"=>0));    	}    	if ($get['paytype'] != "wechat" && $get['paytype'] != "alipay" && $get['paytype'] != "bank" && $get['paytype'] != "usdt"){    		$this->ajaxReturn(array("msg"=>"非法操作，选择付款方式有误","success"=>0));    	}    	$find = M("charge")->where(array("user_id"=>session("mid"),"status"=>0))->count();    	if ($find > 0){    		$this->ajaxReturn(array("msg"=>"您已经有一条充值申请，请勿重复提交","success"=>0));    	}    	if ($get['paytype'] == "usdt"){    		$rate = C("rate_usdt");    		$total = $get['amount'] / $rate;    	}else{    		$rate = C("rate");    		$total = $get['amount'] * $rate;    	}    	    	$data = [    		'user_id'	=> $userinfo['id'],    		'username'	=> $userinfo['username'],    		'type'		=> $get['paytype'],    		'charge'	=> $get['amount'],    		'rate'		=> $rate,    		'total'		=> $total,    		'status'	=> 0,    		'addtime'	=> time(),    		'image'		=> $get['image']    	];    	    	$ret = M("charge")->add($data);    	if ($ret){    		$this->ajaxReturn(array("msg"=>"提交充值成功，请等待管理员操作","success"=>1));    	}else{    		$this->ajaxReturn(array("msg"=>"提交充值失败","success"=>0));    	}    }        public function charge_list(){    	$get = I("get.");    	if ($get['page'] == null){    		$list = M("charge")->where(array('user_id'=>session("mid")))->order("id desc")->limit(20)->select();    		$this->assign("list",$list);    		$this->display();    	}else{    		$list = M("charge")->where(array('user_id'=>session("mid")))->order("id desc")->page($get['page'].",20")->select();    		foreach ($list as &$v){    			$v['status'] = charge_status($v['status']);    			$v['charge'] = floatval($v['charge']);    			$v['addtime'] = date("Y-m-d H:i:s",$v['addtime']);    			if ($v['type'] == "usdt"){    				$v['total']	= number_format($v['total'],2) . " USDT";    			}else{    				$v['total']	= "￥".number_format($v['total'],2);    			}    		}    		$this->success($list);    	}    }        public function withdrawal_list(){    	$get = I("get.");    	if ($get['page'] == null){    		$list = M("withdrawal")->where(array('user_id'=>session("mid")))->order("id desc")->limit(20)->select();    		$this->assign("list",$list);    		$this->display();    	}else{    		$list = M("withdrawal")->where(array('user_id'=>session("mid")))->order("id desc")->page($get['page'].",20")->select();    		foreach ($list as &$v){    			$v['status'] = withdrawal_status($v['status']);    			$v['number'] = floatval($v['number']);    			$v['addtime'] = date("Y-m-d H:i:s",$v['addtime']);    			if ($v['type'] == "usdt"){    				$v['total']	= number_format($v['total'],2) . " USDT";    			}else{    				$v['total']	= "￥".number_format($v['total'],2);    			}    		}    		$this->success($list);    	}    }        public function gift(){    	$user = $this->memberinfo;    	$this->assign("ipfs",floatval($user['ipfs']));    	$this->assign("yuanqi",floatval($user['yuanqi']));    	$this->display();    }        public function gift_post(){    	$get = $_POST;    	//1、进入判断环节    	//判断数量是否正确    	if (strstr($get['amount'],".")){    		$this->ajaxReturn(array("msg"=>"请输入整数","success"=>0));    		exit;    	}    	if ($get['amount'] < C("minz")){    		$this->ajaxReturn(array("msg"=>"转赠数量不得少于".C('minz'),"success"=>0));    		exit;    	}    	//判断密码是否正确    	$verify = ejmm($get['ejmm'],session("mid"));	//封装ejmm方法    	if ($verify != 1){    		$this->ajaxReturn(array("msg"=>"二级密码错误，请重新输入","success"=>0));    		exit;    	}    	//判断是否被非法篡改选择框    	if ($get['bitype'] != "ipfs" && $get['bitype'] != 'yuanqi'){    		$this->ajaxReturn(array("msg"=>"非法操作！请正确选择转赠货币类型","success"=>0));    		exit;    	}    	//判断用户是否存在    	$touser = M("member")->where(array("username"=>$get['username']))->find();    	if (empty($touser)){    		$this->ajaxReturn(array("msg"=>"该用户不存在","success"=>0));    		exit;    	}    	//2、执行转赠操作    	$sxf = C("giftsxf") / 100;	    	M()->startTrans();		$ret1 = M("member")->where(array("username"=>session("username")))->setDec($get['bitype'],$get['amount'] * (1 + $sxf));		$ret2 = M("member")->where(array("username"=>$touser['username']))->setInc($get['bitype'],$get['amount']);    	$ret3 = jinbi(session("username"),$get['amount'],"转赠",0,7,$get['bitype']);		//转赠 7    	$ret4 = jinbi($touser['username'],$get['amount'],"转赠",1,11,$get['bitype'],session("username"));	//收钱方 11    	if ($sxf != 0){    		$ret5 = jinbi(session("username"),$get['amount'] * $sxf,"转赠手续费",0,15,$get['bitype']);		//转赠手续费 15    	}else{    		$ret5 = 1;    	}    	if ($ret1 && $ret2 && $ret3 && $ret4 && $ret5){    		M()->commit();    		$this->ajaxReturn(array("msg"=>"转赠成功","success"=>1));    	}else{    		M()->rollback();    		$this->ajaxReturn(array("msg"=>"转赠失败","success"=>0));    	}    }        /**	 * 上传图片	 */	public function uploadImg(){        $name = $_FILES['file']['name'];	//上传图片的名称        $tmp = $_FILES['file']['tmp_name']; //上传图片的临时文件名，被用于在其他地方复制文件        $uploaddir = "./Public/Uploads/fkm";//设置文件保存目录 注意包含        if (!file_exists($uploaddir)) {            mkdir($uploaddir, 0777, true);        }                $path = $uploaddir."/";        $ext = $this->extend($name);	//获得图片文件名的后缀        $pic_type = ['png','jpg','jpeg'];        if(!in_array($ext,$pic_type)) {            echo json_encode(array('result' => 0,'msg'=>'上传文件格式错误'));            exit;        }        $image_name = time().rand(100,999).".".$ext;        if(move_uploaded_file($tmp, $path.$image_name)){        	echo json_encode(array('result' => 1,'msg'=>'图片上传成功!','path'=>'/Public/Uploads/fkm/'.$image_name));            return;        }else{            echo json_encode(array('result' => 0,'msg'=>'上传出错了'));            return;        }	}		public function uploadskm(){        $name = $_FILES['file']['name'];	//上传图片的名称        $tmp = $_FILES['file']['tmp_name']; //上传图片的临时文件名，被用于在其他地方复制文件        $uploaddir = "./Public/Uploads/userskm";//设置文件保存目录 注意包含        if (!file_exists($uploaddir)) {            mkdir($uploaddir, 0777, true);        }                $path = $uploaddir."/";        $ext = $this->extend($name);	//获得图片文件名的后缀        $pic_type = ['png','jpg','jpeg'];        if(!in_array($ext,$pic_type)) {            echo json_encode(array('result' => 0,'msg'=>'上传文件格式错误'));            exit;        }        $image_name = time().rand(100,999).".".$ext;        if(move_uploaded_file($tmp, $path.$image_name)){        	echo json_encode(array('result' => 1,'msg'=>'图片导入成功!','path'=>"/Public/Uploads/userskm/".$image_name));            return;        }else{            echo json_encode(array('result' => 0,'msg'=>'上传出错了'));            return;        }	}	/**     * 获得后缀     */  	public function extend($file_name){        $extend = pathinfo($file_name);        $extend = strtolower($extend["extension"]);        return $extend;    }        public function chexiao(){		$get = $_POST;		if ($get['type'] == "charge"){			$ret = M("charge")->where(array("id"=>$get['id']))->save(array("status"=>3));		}elseif ($get['type'] == "withdrawal"){			$find = M("withdrawal")->where(array("id"=>$get['id']))->find();			M()->startTrans();			if($find['bi'] == 'ipfs') {			    $inc = M("member")->where(array("id"=>$find['user_id']))->setInc('fil',$find['number']);			    $log = jinbi(session("username"),$find['number'],"提现撤销",1,12,'fil');			} else {			    $inc = M("member")->where(array("id"=>$find['user_id']))->setInc($find['bi'],$find['number']);			    $log = jinbi(session("username"),$find['number'],"提现撤销",1,12,$find['bi']);			}							$ret = M("withdrawal")->where(array("id"=>$get['id']))->save(array("status"=>3));			if ($ret && $inc && $log){				M()->commit();				$this->ajaxReturn(array("msg"=>"撤销成功","success"=>1));				exit;			}else{				M()->rollback();				$this->ajaxReturn(array("msg"=>"撤销失败：该订单已撤销","success"=>0));				exit;			}		}elseif ($get['type'] == "buykj"){			$ret = M("order_list")->where(array("id"=>$get['id']))->save(array("status"=>3));		}		if ($ret){			$this->ajaxReturn(array("msg"=>"撤销成功","success"=>1));		}else{			$this->ajaxReturn(array("msg"=>"撤销失败：改订单已撤销","success"=>0));		}	}	public function shensu_post(){		$get = $_POST;		$info = [			"shensu"	=> $get['shensu'],			"status"	=> 4		];		if ($get['type'] == "charge"){			$ret = M("charge")->where(array("id"=>$get['id']))->save($info);		}elseif ($get['type'] == "withdrawal"){			$ret = M("withdrawal")->where(array("id"=>$get['id']))->save($info);		}elseif ($get['type'] == "exchange"){			$ret = M("exchange")->where(array("id"=>$get['id']))->save($info);		}elseif ($get['type'] == "buykj"){			$ret = M("order_list")->where(array("id"=>$get['id']))->save($info);		}		if ($ret){			$this->ajaxReturn(array("msg"=>"申诉成功","success"=>1));		}else{			$this->ajaxReturn(array("msg"=>"申诉失败","success"=>0));		}			}		public function exchange(){		$config = array("btc_ipfs"=>C("btc_ipfs"),"ltc_ipfs"=>C("ltc_ipfs"));		$user = $this->memberinfo;		$this->assign("config",$config);		$this->assign("ipfs",$user['ipfs']);		$this->display();	}		public function exchange_post(){		$get = $_POST;		$sxf = C('changesxf');		if ($get['coin'] == "BTC"){			$rate = C("btc_ipfs");			$coin_num = round($get['amount'] / $rate * (1 - $sxf),7);		}elseif ($get['coin'] == 'LTC'){			$rate = C("ltc_ipfs");			$coin_num = round($get['amount'] / $rate * (1 - $sxf),7);		}else{			$this->ajaxReturn(array("msg"=>"非法操作！请正确选择转换货币","success"=>0));		}				$verify = ejmm($get['pwd'],session("mid"));    	if ($verify != 1){    		$this->ajaxReturn(array("msg"=>"密码错误","success"=>0));    	}    	    	if ($get['amount'] < C("minz")){    		$this->ajaxReturn(array("msg"=>"货币转换数量不得少于".C('minz'),"success"=>0));    		exit;    	}    	    	$is = M("exchange")->where(array("user_id"=>session("mid"),"status"=>0))->count();    	if ($is > 0){    		$this->ajaxReturn(array("msg"=>"您已经有一条货币转换申请","success"=>0));    	}    			$data = [			"user_id"		=> session("mid"),			"username"		=> session("username"),			"ipfs"			=> $get['amount'],			"rate"			=> $rate,			"sxf"			=> C("changesxf"),			"type"			=> $get['coin'],			"total"			=> $coin_num,			"address"		=> $get['address'],			"addtime"		=> time(),			"status"		=> 0,		];		M()->startTrans();		$ret1 = M("member")->where(array("id"=>session("mid")))->setDec("ipfs",$get['amount']);		$ret2 = M("exchange")->add($data);		if (C("changesxf") != 0){			$desc = "货币转换(含".($get['amount']*C("changesxf")/100)."手续费)";		}else{			$desc = "货币转换";		}		$log = $log = jinbi(session("username"),$get['amount'],$desc,0,10,"ipfs");		//货币转换 10		if ($ret1 && $ret2 && $log){			M()->commit();			$this->ajaxReturn(array("msg"=>"提交成功，等待管理员审核。","success"=>1));		}else{			M()->rollback();			$this->ajaxReturn(array("msg"=>"提交失败","success"=>0));		}	}}?>