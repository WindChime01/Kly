<?php//账号管理控制器Class AccountAction extends CommonAction{    //账号管理    public function index(){        $this->display();    }    //账号解封    public function jiefeng(){        $this->display();    }    //账号解封执行    public function jfpost(){        if(empty($_POST['mobile']) || empty($_POST['password2']) || empty($_POST['shenfen'])){            alert('请正确填写解封信息！',-1);            die;        }        $jiefeng = M('member')->where(array('username'=>$_POST['mobile'],'lock'=>1))->find();        if(!$jiefeng){            alert('该账号未被封禁或者账号不存在！',-1);            die;        }        if($jiefeng['level'] == 0){            alert('该账号所在级别不能被解封！',-1);            die;        }        $list = M('member')->where(array('username'=>session('username'),'password'=>md5($_POST['password2']),'shenfen'=>$_POST['shenfen']))->find();        if(empty($list)){            alert('您输入的二级密码或者身份证号不正确！',-1);            die;        }        $membergroup =M('member_group')->where(array('level'=>$jiefeng['level']))->find();        if($jiefeng['jfcs'] >= $membergroup['jfnum']){            alert('您要解封的账号已达到该账号所在级别的最高解封次数！',-1);            die;        }else{            if($list['ksye'] < $membergroup['jfmoney']){                alert('您的可售余额不足，无法解封！',-1);                die;            }else{                M('member')->where(array('username'=>$_POST['mobile']))->save(array('lock'=>0));                M('member')->where(array('username'=>session('username')))->setDec('ksye',$membergroup['jfmoney']);                M('member')->where(array('username'=>$_POST['mobile']))->setInc('jfcs');                keshou(session('username'),$membergroup['jfmoney'],'解封会员'.$_POST['mobile'],0);                alert('账号解封成功！',U('Index/Index/index'));            }        }    }    //个人资料    public function grzl(){        $list = M('member')->where(array('username'=>session('username')))->field('username,regdate,parent,truename')->find();        $status = M('member')->where(array('username'=>session('username')))->getField('status');        $this->assign('list',$list);        $this->assign('status',$status);        $this->display();    }    // 修改密码    public function dlmm(){        $list = M('member')->where(array('username'=>session('username')))->field('username,regdate,parent,truename,shenfen,image')->find();        $status = M('member')->where(array('username'=>session('username')))->getField('status');        if ($status == 0)        {        	alert('请先去实名认证！',-1);        	die;        }        $this->assign('list',$list);        $this->assign('status',$status);        $this->display();    }    //修改登录密码    public function dlmmpost(){        $old_password = I('post.old_password','','strval');        if(empty($old_password)){            alert('原密码不能为空！',-1);            die;        }        $newpwd = I('post.newpwd','','strval');        $newpwd1 = I('newpwd1','','strval');        if (empty($newpwd)  || empty($newpwd1)) {            alert('新登陆密码或确认密码不能为空！',-1);            die;        }        if(!preg_match("/^[a-zA-Z\d_]{6,}$/",I('post.newpwd'))){            alert('新密码长度不能小于6位！',-1);            die;        }        if ($newpwd !=$newpwd1) {            alert('两次密码输入不一样！',-1);            die;        }        $old = M('member')->where(array('id'=>session('mid')))->getField('password');        if ($old != MD5($old_password)) {            alert('原登陆密码错误！',-1);            die;        }        if (M('member')->where(array('id'=>session('mid')))->save(array('password'=>MD5($newpwd)))) {            alert('登陆密码修改成功！',U('Index/Account/dlmm'));        }else{            alert('登陆密码修改失败！',U('Index/Account/dlmm'));        }    }        public function dlmmpost1(){            if (IS_POST) {                $data['shenfen']    = $_POST['shenfen'];                $data['truename']   = $_POST['truename'];                $data['image']  =  $_POST['image'];                $status = M('member')->where(array('username'=>session('username')))->getField('status');                if($status == 2){                    alert('当前账号已修改过！',-1);                    die;                }       //          if(empty($data['shenfen'])){       //              alert('身份证号不能为空',-1);       //              die;       //          }    			// if(!preg_match("/(^\d{15}$)|(^\d{17}([0-9]|X)$)/",$data['shenfen'])){       //              alert('身份证号码格式不正确',-1);       //              die;       //          }       //          if(empty($data['truename'])){       //              alert('真实姓名不能为空',-1);       //              die;       //          }    			// if(!preg_match("/^[\x{4e00}-\x{9fa5}]+$/u",$data['truename'])){    			// 	alert('真实姓名格式不正确',-1);       //              die;    			// }	                if(empty($data['image'])){                    alert('请上传收款码截图',-1);                    die;                }                $data['status']  = 2;                if (M('member')->where(array('username'=>session('username')))->save($data))                 {                    alert('实名认证修改成功!',U('Account/shoukuanma'));                }else{                    alert('实名认证修改失败，请重新提交!',-1);                }        }    }    //修改二级密码    public function ejmmpost(){        $old_password = I('post.ymm','','strval');        if(empty($old_password)){            alert('原密码不能为空！',-1);            die;        }        $newpwd = I('post.xmm','','strval');        $newpwd1 = I('xmmqr','','strval');        if (empty($newpwd)  || empty($newpwd1)) {            alert('新二级密码或确认密码不能为空！',-1);            die;        }        if(!preg_match("/^[a-zA-Z\d_]{6,}$/",I('post.newpwd'))){            alert('新密码长度不能小于6位！',-1);            die;        }        if ($newpwd !=$newpwd1) {            alert('两次密码输入不一样！',-1);            die;        }        $old = M('member')->where(array('id'=>session('mid')))->getField('password2');        if ($old != MD5($old_password)) {            alert('原二级密码错误！',-1);            die;        }        if (M('member')->where(array('id'=>session('mid')))->save(array('password2'=>MD5($newpwd)))) {            alert('二级密码修改成功！',U('Index/Account/ejmm'));        }else{            alert('二级密码修改失败！',U('Index/Account/ejmm'));        }    }    //矿池资产    public function kczc(){        $jinbi = M('member')->where(array('id'=>session('mid'),))->field('jinbi,level')->find();        $kcdh = M('member_group')->where(array('level'=>$jinbi['level']))->getField('dhkc');        		$keshoudetail = M('keshoudetail')->where(array('member'=>session('username')))->order('id desc')->find();				if($keshoudetail){			$nex_time = $keshoudetail['addtime']+24*3600;		}else{			$nex_time = 0;		}	        $this->assign('kcdh',$kcdh);        $this->assign('jinbi',$jinbi);		$this->assign('keshoudetail',$keshoudetail);		$this->assign('nex_time',$nex_time);        $this->display();    }    //矿池资产兑换    public function kcpost(){        if (IS_POST) {            $kczc  = $_POST['amount'];            $ejmm = md5($_POST['ejmm']);            if(empty($kczc) && empty($ejmm)){                alert('请正确填写信息！',-1);                die;            }            if (intval($_POST['amount']) <= 0)             {                alert('存入金额必须大于0',-1);                die;            }						if(intval($_POST['amount'])%10){				 alert('存入金额必须是10的倍数',-1);                die;			}            $member = M('member')->where(array('username'=>session('username')))->field('jinbi,level')->find();            if (!M('member')->where(array('username'=>session('username'),'password2'=>$ejmm))->getField('id')) {                alert('对不起,二级密码错误!',-1);                die;            }else{                if ($member['jinbi'] < $kczc) {                    alert('对不起,您的可存入矿池钱包不足!',-1);                    die;                }else{                    $dhzc = M('member_group')->where(array('level'=>$member['level']))->getField('dhkc');                    $zjkc = $kczc * $dhzc;                    M('member')->where(array('username'=>session('username')))->setInc('kczc',$zjkc);                    zichan(session('username'),$zjkc,'矿池钱包兑换',1);                    M('member')->where(array('username'=>session('username')))->setDec('jinbi',$kczc);                    jinbi(session('username'),$kczc,'兑换矿池资产',0);                    alert('兑换矿池资产成功!',U('Index/Account/kczc'));                }            }        }    }    //可售余额兑换管理    public function dhgl(){        $ksye = M('member')->where(array('id'=>session('mid'),))->field('ksye,level')->find();        $dhzcbs = C('dhzcbs');        $this->assign('dhzcbs',$dhzcbs);        $this->assign('ksye',$ksye);        $this->display();    }    //可售余额兑换执行    public function dhpost(){        if (IS_POST) {            $zchb  = $_POST['zchb'];            $ejmm = md5($_POST['ejmm']);            if(empty($zchb) || empty($ejmm)){                alert('请正确填写信息！',-1);                die;            }            if (intval($_POST['zchb']) <= 0)             {                alert('兑换金额必须大于0',-1);                die;            }            //设置提现整数倍            if (C('dhzcbs') > 0) {                if ($zchb % C('dhzcbs') != 0) {                    alert('您输入的兑换金额必须为'. C('dhzcbs').'的整数倍！',-1);                    die;                }            }            $member = M('member')->where(array('username'=>session('username')))->field('ksye,level')->find();            if (!M('member')->where(array('username'=>session('username'),'password2'=>$ejmm))->getField('id')) {                alert('对不起,二级密码错误!',-1);                die;            }else{                if ($member['ksye'] < $zchb) {                    alert('对不起,您的可售余额不足!',-1);                    die;                }else{                    M('member')->where(array('username'=>session('username')))->setInc('jinbi',$zchb);                    jinbi(session('username'),$zchb,'可售余额兑换',1);                    M('member')->where(array('username'=>session('username')))->setDec('ksye',$zchb);                    keshou(session('username'),$zchb,'兑换矿池钱包',0);                    alert('兑换矿池钱包成功!',U('Index/Account/dhgl'));                }            }        }    }    //收款码    public function shoukuanma(){        $list = M('member')->where(array('username'=>session('username')))->find();        $status = M('member')->where(array('username'=>session('username')))->getField('status');        $this->assign('status',$status);        $this->assign('list',$list);        $this->display();    }    public function skmpost(){        if (IS_POST) {            $data['shenfen']    = $_POST['shenfen'];            $data['truename']   = $_POST['truename'];            $data['image']  =  $_POST['image'];            $status = M('member')->where(array('username'=>session('username')))->getField('status');            if($status == 1){                alert('当前账号已经认证过，不可重复认证！',-1);                die;            }            if(empty($data['shenfen'])){                alert('身份证号不能为空',-1);                die;            }            if(!preg_match("/(^\d{15}$)|(^\d{17}([0-9]|X)$)/",$data['shenfen'])){                alert('身份证号码格式不正确',-1);                die;            }			            // if(!preg_match("/^[1-9]\d{5}(18|19|([23]\d))\d{2}((0[1-9])|(10|11|12))(([0-2][1-9])|10|20|30|31)\d{3}[0-9Xx]$)|(^[1-9]\d{5}\d{2}((0[1-9])|(10|11|12))(([0-2][1-9])|10|20|30|31)\d{2}$/",$data['shenfen'])){            //     alert('身份证号码格式不正确',-1);            //     die;            // }            if(empty($data['truename'])){                alert('真实姓名不能为空',-1);                die;            }			if(!preg_match("/^[\x{4e00}-\x{9fa5}]+$/u",$data['truename'])){				alert('真实姓名格式不正确',-1);                die;			}	            if(empty($data['image'])){                alert('请上传收款码截图',-1);                die;            }            $data['status']  = 1;            if (M('member')->where(array('username'=>session('username')))->save($data)) {                $user_id = M('member')->where(array('username'=>session('username')))->getField('id');                $product = M("product");                $num = C('num');                $id =  C('z_num');                //查询矿机信息                $data = $product -> find($id);                if(empty($data)){                    alert('矿机不存在!',-1);                }                for($i=1;$i<=$num;$i++){                    $map = array();                    $yCode = array('A', 'B', 'C', 'D', 'E', 'F', 'Q', 'Q', 'I', 'J');                    $map['kjbh'] = $yCode[intval(date('Y')) - 2011] . date('d') . substr(time(), -5) . sprintf('%02d', rand(0, 99));                    $map['user'] = session('username');                    $map['user_id'] = $user_id;                    $map['project']= $data['title'];                    $map['sid'] = $data['id'];                    $map['yxzq'] = $data['yszq'];                    $map['sumprice'] = $data['price'];                    $map['addtime'] = date('Y-m-d H:i:s');                    $map['imagepath'] = $data['thumb'];                    $map['lixi']	= $data['gonglv'];                    $map['kjsl'] =  $data['shouyi'];                    $map['zt'] =  1;                    $map['UG_getTime'] =  time();                    M('order')->add($map);                    jinbi(session('username'),0,'注册赠'.$data['title'],1,3);                    $product->where(array("id"=>$id))->setDec("stock");                }                alert('实名认证成功!',U('Account/shoukuanma'));            }else{                alert('实名认证失败，请重新提交!',-1);            }        }    }    //活动奖励    public function hdjl(){        $list = M('hdjl')->select();        $username = session('username');        foreach($list as $k => $v){                        // $leiji = M('jyzx')->where("date > ". $v['addtime']." AND date < ". $v['endtime']." AND mr_user = $username AND zt = 2")->sum('cbt');            $leiji = M('jyzx')->where(" mr_user = $username AND zt = 2")->sum('cbt');            // $zichan = M('zichandetail') ->where(array('member'=>$username,'type'=>2))->sum('adds');            $zichan = M('zichandetail')->join('ds_hdjl on ds_hdjl.id = ds_zichandetail.hdjl_id') ->where(array('ds_zichandetail.member'=>$username,'ds_zichandetail.type'=>2))->sum('ds_hdjl.num');            $list[$k]['leiji'] = $leiji - $zichan;            $list[$k]['kjname'] = M('product') ->where(array('id'=>$v['kj_id']))->getField('title');        }        $this->assign('list',$list);        $this->display();    }    //查看奖励详情    public function ckhd(){        $list = M('hdjl')->where(array('id'=>$_GET['id']))->find();        $kjname = M('product') ->where(array('id'=>$list['kj_id']))->getField('title');        $this->assign('kjname',$kjname);        $this->assign('list',$list);        $this->display();    }    //领取奖励    public function lqjl(){        $id = $_GET['id'];        $username = session('username');        $user_id = session('mid');        $list = M('hdjl')->where(array('id'=>$id))->find();        if(time() < $list['addtime'] && time() > $list['endtime']){            alert('活动结束，该活动已经过了活动时间！',-1);        }        $leiji= M('jyzx')->where("mr_user = $username AND zt = 2")->sum('cbt');        // $zichan = M('zichandetail') ->where(" member = $username AND type = 2")->sum('adds');        $zichan = M('zichandetail')->join('ds_hdjl on ds_hdjl.id = ds_zichandetail.hdjl_id') ->where(array('ds_zichandetail.member'=>$username,'ds_zichandetail.type'=>2))->sum('ds_hdjl.num');        $yingfa = $leiji - $zichan;        if($yingfa < $list['num']){            alert('您未达到本期'.$list['name'].'的要求！',-1);            exit;        }        // 限制每次活动只能领取一次        $hdjlCount = M('zichandetail')->where(array('hdjl_id'=>$id,'member'=>$username))->count();        if ($hdjlCount > 0)         {            alert('您已经领取过了本期活动,不能再次领取！',-1);            exit;        }        if(M('member')->where(array('username'=>$username))->setInc('kczc',$list['zszc']))  {            zichan($username,$list['zszc'],$list['name'].'赠送',1,2,$id);        }        if($list['kj_num'] > 0){            //查询矿机信息            $data = M('product')->where(array('id'=>$list['kj_id']))->find();            if(!empty($data)){                for($i=1;$i<=$list['kj_num'];$i++){                    $map = array();                    $yCode = array('A', 'B', 'C', 'D', 'E', 'F', 'Q', 'Q', 'I', 'J');                    $map['kjbh'] = $yCode[intval(date('Y')) - 2011] . date('d') . substr(time(), -5) . sprintf('%02d', rand(0, 99));                    $map['user'] = session('username');                    $map['user_id'] = $user_id;                    $map['project']= $data['title'];                    $map['sid'] = $data['id'];                    $map['yxzq'] = $data['yszq'];                    $map['sumprice'] = $data['price'];                    $map['addtime'] = date('Y-m-d H:i:s');                    $map['imagepath'] = $data['thumb'];                    $map['lixi']	= $data['gonglv'];                    $map['kjsl'] =  $data['shouyi'];                    $map['zt'] =  1;                    $map['UG_getTime'] =  time();                    M('order')->add($map);                    jinbi(session('username'),0,$list['name'].'赠'.$data['title'],1,3);                    M('product')->where(array("id"=>$list['kj_id']))->setDec("stock");                }            }        }        alert('领取'.$list['name'].'奖励成功！',-1);    }    //上传图片    //ajax 图片上传    public function uploads(){        if(isset($_POST) and $_SERVER['REQUEST_METHOD'] == "POST"){            $name = $_FILES['photoimg']['name'];            $size = $_FILES['photoimg']['size'];            $file_time=date('Ymd',time());            $file_name = './Public/Uploads/shoukuanma/'.date('Ymd');            if(!file_exists($file_name)){                mkdir($file_name);            }            $path = $file_name.'/';            $extArr = array("jpg", "png", "gif", "jpeg");            if(empty($name)){                echo json_encode(array('result' => 0,'msg'=>'请选择要上传的图片'));                return;            }            $ext = $this->extend($name);            if(!in_array($ext,$extArr)){                echo json_encode(array('result' => 0,'msg'=>'图片格式错误'));                return;            }            if($size>(300*1024*1024)){                echo json_encode(array('result' => 0,'msg'=>'图片大小不能超过3M'));                return;            }            $image_name = time().rand(100,999).".".$ext;            $tmp = $_FILES['photoimg']['tmp_name'];            $uploadip = substr($path,9);            if(move_uploaded_file($tmp, $path.$image_name)){                echo json_encode(array('result' => 1,'url'=>$uploadip.$image_name));                return;            }else{                echo json_encode(array('result' => 0,'msg'=>'上传出错了'));                return;            }            exit;        }        exit;    }    public function uploads1(){        if(isset($_POST) and $_SERVER['REQUEST_METHOD'] == "POST"){            $name = $_FILES['photoimg']['name'];            $size = $_FILES['photoimg']['size'];            $file_time=date('Ymd',time());            $file_name = './Public/Uploads/shequn/';            if(!file_exists($file_name)){                mkdir($file_name);            }            $path = $file_name.'/';            $extArr = array("jpg", "png", "gif", "jpeg");            if(empty($name)){                echo json_encode(array('result' => 0,'msg'=>'请选择要上传的图片'));                return;            }            $ext = $this->extend($name);            if(!in_array($ext,$extArr)){                echo json_encode(array('result' => 0,'msg'=>'图片格式错误'));                return;            }            if($size>(300*1024*1024)){                echo json_encode(array('result' => 0,'msg'=>'图片大小不能超过3M'));                return;            }            $image_name = time().rand(100,999).".".$ext;            $tmp = $_FILES['photoimg']['tmp_name'];            $uploadip = substr($path,9);            if(move_uploaded_file($tmp, $path.$image_name)){                echo json_encode(array('result' => 1,'url'=>$uploadip.$image_name));                return;            }else{                echo json_encode(array('result' => 0,'msg'=>'上传出错了'));                return;            }            exit;        }        exit;    }    public function extend($file_name){        $extend = pathinfo($file_name);        $extend = strtolower($extend["extension"]);        return $extend;    }    public function sqjl(){        $huiyuan = M('member') ->where(array('parent'=>session('username')))->count();        $sqbz = C('sqbz');        if($huiyuan < C('zhitui')){            alert('对不起，必须直推'.C('zhitui').'人才可以申请该项奖励！',-1);        }        $count = M('shequn') ->where(array('member'=>session('username')))->count();        if($count >= 1){            alert('对不起，每个账号只能申请一次社群奖励！',-1);        }        $this -> assign('sqbz',$sqbz);        $this->display();    }    public function sqjlpost(){        $huiyuan = M('member') ->where(array('parent'=>session('username')))->count();        if($huiyuan < C('zhitui')){            alert('对不起，必须直推'.C('zhitui').'人才可以申请该项奖励！',-1);        }        $count = M('shequn') ->where(array('member'=>session('username')))->count();        if($count >= 1){            alert('对不起，每个账号只能申请一次社群奖励！',-1);        }        if(empty($_POST['name'])){            alert('请输入群名称！',-1);        }        if(empty($_POST['weixin'])){            alert('请输入您的微信号！',-1);        }        if(empty($_POST['QQ'])){            alert('请输入您的支付宝号！',-1);        }        if(empty($_POST['image'])){            alert('请上传群二维码截图！',-1);        }        $_POST['member'] = session('username');        if(M('shequn')->add($_POST)){            alert('社群信息提交成功，请等待审核！',-1);        }else{            alert('提交失败，请重新提交！',-1);        }    }    //曲线图    public function resource(){        $date = M('date')->field('date')->order('id desc')->limit(0, 5)->select();        $price = M('date')->field('price')->order('id desc')->limit(0, 5)->select();        $date = array_reverse($date);        $price = array_reverse($price);        foreach($date as $k => $d){            $categories[$k] = date("m-d",$d['date']);        }        foreach($price as $k => $d){            $series[$k] = $d['price'];        }        $categories = "'".implode("','",$categories)."'";        $series = implode(",",$series);        $this->assign('categories', $categories);        $this->assign('series', $series);        $this->display();    }	//系统公告	public function gonglist(){		$page = 1;		$news = M('announce')->order('addtime desc')->page($page.',8')->select();        $this->assign('news',$news);		$this->display();	}		//系统公告	public function newslist(){		$page = $_POST['page'] ? $_POST['page'] : 1;		$detail = M('announce')->order('addtime desc')->page($page.',8')->select();		// dump($detail);		$this->success($detail);	}		public function gongdetail() {		$id = $_GET['id'];		if(!$id){			$this->success('参数错误');		}		$news = M('announce')->where(array('id'=>$id))->find();        $this->assign('news',$news);		$this->display();	}    //更新公告    public function gonggao(){        $new = M('updatenew')->where(array('id'=>1))->find();        $this->assign('new',$new);        $this->display();    }    /**     * 发送手机注册验证码     */    public function send_sms_reg_code(){        $mobile = I('mobile');        if(!check_mobile($mobile))            exit(json_encode(array('status'=>-1,'msg'=>'手机号码格式有误!')));        if (M('member')->where(array('mobile'=>$mobile))->getField('id')) {            exit(json_encode(array('status'=>-1,'msg'=>'手机号码已存在!')));        }        $code =  rand(1000,9999);        $send = sms_log($mobile,$code,session_id());        if($send['status'] != 1)            exit(json_encode(array('status'=>-1,'msg'=>$send['msg'])));        exit(json_encode(array('status'=>1,'msg'=>'验证码已发送，请注意查收')));    }	//获取用户的所有下级ID    function get_downline($data,$mid){        $arr=array();        foreach ($data as $key => $v) {            if($v['parent_id']==$mid){                $arr[]=$v;                $arr = array_merge($arr,$this->get_downline($data,$v['id']));            }        }        return $arr;    }        // //获取用户的所有下级ID    // private function downline($user_id){    //     $id = M('member')->where(['id'=>$user_id])->getField('id');    //     $user = M('member')->field('id,parent_id')->select();    //     $arr = [$id];    //     foreach ($user as $val){    //         if(in_array($val['parent_id'],$arr)) {    //             $arr[] = $val['id'];    //         }    //     }    //     unset($user);    //     return $arr;    // }    //我的直推    public function myAccount(){        import('ORG.Util.Page');                $user = M('member')->where(['parent_id'=>session('mid')])->field('id,username')->select();        $ztrs = M('member')->where(['parent_id'=>session('mid')])->count();        $downline = $this->downline(session('mid'));        $tdsy = M('kly_gy')->where(['user_id'=>['in',$downline]])->sum('amount');        foreach ($user as $key=>$val){        $gryj = M('kly_gy')->where(['user_id'=>$val['id']])->sum('amount');        if(!$gryj){            $gryj = 0;        }        $user[$key]['gryj'] = $gryj;        }        $tdrs = count($downline);        // dump($tdrs);die;        $this->assign('tdrs',$tdrs);        $this->assign('tdsy',$tdsy);        $this->assign('ztrs',$ztrs);        $this->assign('user',$user);        $this->display();    }	//我的间推	public function myAccount1(){        $user_id = session('mid');        $user_list = M('member')->field('id,username,parent_id,level')->select();        $zt_list = M('member')->where(array('parent_id'=>session('mid')))->order('id asc')->field('id,username,parent_id,level')->select();        $levels = M('team_level_group')->select();        		$zt_nums = count($zt_list);		$jt_nums = 0;		$jt_list = [];		foreach ($zt_list as &$val) {			// $jt_lists = $this->get_downline($user_list,$val['id']);			$jt_lists = M('member')->where(array('parent_id'=>$val['id']))->select();			if($jt_lists) {				$jt_list = array_merge($jt_list,$jt_lists);			}						// dump($jt_list);			$nums = count($jt_lists);			$val['nums'] = $nums;			$jt_nums += $nums;		}		foreach($jt_list as &$jtval) {			$a_nums = count($this->get_downline($user_list,$jtval['id']));			$jtval['nums'] = $a_nums + 1;			if($jtval['level'] == 0 || !$jtval['level']) {				$jtval['level_name'] = '无';				continue;			}			foreach ($levels as $values){				if($jtval['level'] == $values['level']) {					$jtval['level_name'] = $values['name'];					break;				}			}		}		$total_nums = count($this->get_downline($user_list,session('mid')));		// dump($jt_list);die;        $this->assign('list',$jt_list);		$this->assign('zt_nums',$zt_nums);		$this->assign('jt_nums',$jt_nums);		$this->assign('total_nums',$total_nums + 1);        $this->display();    }    		// public function getTgm() {	// 	$member = M('member')->field('id')->select();	// 	// dump($member);die;	// 	foreach ($member as $val) {	// 		$code = getRandChar();	// 		$rst = M('member')->where(array('tgm'=>$code))->find();	// 		while($rst != NULL){	// 			$code = $this->getRandChar();	// 			$rst = M('member')->where(array('tgm'=>$code))->find();	// 		}	// 		M('member')->where(array('id'=>$val['id']))->save(array('tgm'=>$code));	// 	}	// }	//我的算力 直推	public function mysl(){        $user_id = session('mid');                $where['member'] = session('username');		$where['type'] = array('in','2,3');// 		$total_fh_profit = M('jinbidetail')->where($where)->sum('adds');	//累计分红收益// 		$total_fh_profit = $total_fh_profit ? round($total_fh_profit,2) : 0;        $dateStr = date('Y-m-d', time());   //当天日期        $jssj = strtotime($dateStr);   //今天0点时间戳        $my_sl = M('order')->where(array('zt'=>1,'user_id'=>$user_id))->sum('lixi');	//我的算力        $my_sl = $my_sl ? round($my_sl,2) : 0;        $my_sls = M('member')->where(array('id'=>$user_id))->getField('my_sl');	//我的算力        $my_sls = $my_sls ? round($my_sls,2) : 0;        $list = M('jinbidetail')->where(array('type'=>array('in','2,3'),'member'=>session('username')))->order('addtime desc')->select();        $this->assign('list',$list);		$this->assign('my_sl',$my_sl);// 		$this->assign('total_fh_profit', $my_sls);		$this->assign('total_sl',$my_sls);        $this->display('mynewsl');    } 	//我的算力 间推	public function mysl1(){        $user_id = session('mid');        $user_list = M('member')->field('id,parent_id,level,username')->select();        $zt_list = M('member')->where(array('parent_id'=>session('mid')))->order('id asc')->field('id,username,parent_id,level')->select();        $levels = M('team_level_group')->select();        $dateStr = date('Y-m-d', time());   //当天日期        $jssj = strtotime($dateStr);   //今天0点时间戳        $total_sl = M('order')->where(array('zt'=>1,'user_id'=>$user_id,'kj_addtime'=>array('lt',$jssj)))->sum('lixi');	//总算力        $total_sl = $total_sl ? $total_sl : 0;		$zt_sy = M('yuanqidetail')->where(array('member'=>session('username'),'type'=>1))->sum('adds'); //直推收益		$zt_sy = $zt_sy ? round($zt_sy,2) : 0;		$jt_sy = M('yuanqidetail')->where(array('member'=>session('username'),'type'=>2))->sum('adds'); //直推收益		$jt_sy = $jt_sy ? round($jt_sy,2) : 0;		$jt_lists = [];		foreach ($zt_list as &$val) {			$zt_sl = M('order')->where(array('zt'=>1,'user_id'=>$val['id'],'kj_addtime'=>array('lt',$jssj)))->sum('lixi');	//该直推人总算力			$val['suanli'] = $zt_sl ? $zt_sl : 0;			$total_sl += $zt_sl;			// $jt_list = $this->get_downline($user_list,$val['id']);			$jt_list = M('member')->where(array('parent_id'=>$val['id']))->field('id,username,parent_id,level')->select();			if($jt_list) {				$jt_lists = array_merge($jt_lists,$jt_list);			}					}		foreach($jt_lists as &$jtval) {			$jt_sl = M('order')->where(array('zt'=>1,'user_id'=>$jtval['id'],'kj_addtime'=>array('lt',$jssj)))->sum('lixi');	//该间推人总算力			$jtval['suanli'] = $jt_sl ? $jt_sl : 0;			$total_sl += $jt_sl;			if($jtval['level'] == 0 || !$jtval['level']) {				$jtval['level_name'] = '无';				continue;			}			foreach ($levels as $values){				if($jtval['level'] == $values['level']) {					$jtval['level_name'] = $values['name'];					break;				}			}		}        $this->assign('list',$jt_lists);		$this->assign('zt_sy',$zt_sy);		$this->assign('jt_sy',$jt_sy);		$this->assign('total_sl',$total_sl);        $this->display();    }	//ipfs账户明细	public function ipfsMx() {	    	    		$userinfo = M('member')->where(array('id'=>session('mid')))->field('ipfs,fil')->find();		$ipfs = $userinfo['ipfs'];	//ipfs账户-不可动		$fil = $userinfo['fil'];	//ipfs账户-可提		$where['member'] = session('username');		$where['type'] = array('in','3,21');		$total_fh_profit = M('jinbidetail')->where($where)->sum('adds');	//累计分红收益		$total_fh_profit = $total_fh_profit ? round($total_fh_profit,4) : 0;				$where['type'] = array('in','2');		$total_cb_profit = M('jinbidetail')->where($where)->sum('adds');	//累计分红收益		$total_cb_profit = $total_cb_profit ? round($total_cb_profit,4) : 0;				//已抵押币		$fil_adds = M('fildetail')->where(array('type'=>2,'member'=>session('username')))->sum('adds') + 0;   // 可提现产币				$diya_nums = $userinfo['ipfs'] - $fil_adds;		$diya_nums = $diya_nums > 0 ? $diya_nums : 0;		$this->assign('diya_nums',$diya_nums);        $this->assign('total_fil',$fil_adds);        		//流水		$wherels['member'] = session('username');// 		$wherels['type'] = array('in','2,3,5,6,7,8,10,11,12,13,14,15,16,21');		if(!$page || $page==NULL) {			$page = 1;		}		$detail = M('jinbidetail')->where($wherels)->order('addtime desc')->page($page.',8')->select();		$username = session('username');// 		dump($username);die;		$total_pledge_num = C("total_pledge_num") + 0;		$total_user_sl = M('order')->where(array('zt'=>1,'user'=>$username))->sum('lixi') + 0;	//总算力		$pt_total = M('order')->where(array('zt'=>1))->sum('lixi') + 0;	//总算力		//用户总抵押费用		$pinjun = 0;				if($pt_total > 0 && $total_pledge_num > 0 && $total_user_sl > 0){		    $pinjun = bcdiv($total_pledge_num,$pt_total,4);		    		    $pinjun = $pinjun * $total_user_sl;		}				//未释放		$unknown_currency = C("unknown_currency") + 0;				$total_not_released = 0;		if($pt_total > 0 && $unknown_currency > 0 && $total_user_sl > 0){		    $total_not_released = bcdiv($unknown_currency,$pt_total,4);		    		    $total_not_released = $total_not_released * $total_user_sl;		}				//用户 总消耗GAS费用		$consume_gas = C("consume_gas") + 0;		$total_gas = 0;		if($pt_total > 0 && $consume_gas > 0 && $total_user_sl > 0){		    $total_gas = bcdiv($consume_gas,$pt_total,4);		    		    $total_gas = $total_gas * $total_user_sl;		}						$this->assign('pinjun',$pinjun);		$this->assign('total_not_released',$total_not_released);		$this->assign('total_gas',$total_gas);				$token_ward = M("jinbidetail")->where(["type"=>3,"member"=>session('username')])->sum("adds") + 0;		$already_transfer = M("fildetail")->where(["type"=>55,"member"=>session('username')])->sum("adds") + 0; // 已划转		$left_transfer = $token_ward - $already_transfer > 0 ? $token_ward - $already_transfer : 0;   //剩余可划转		$this->assign('token_ward',$token_ward);		$this->assign('left_transfer',$left_transfer);				$this->assign('list',$detail);		$this->assign('ipfs',$ipfs);		$this->assign('fil',$fil);		$this->assign('total_fh_profit',$total_fh_profit);		$this->assign('total_cb_profit',$total_cb_profit);		$this->display('newipfs');	}		public function ipfschart(){		if ($_GET['t'] == 1){			$time = strtotime(date('Y-m-d')) - 86400 * 6;			for ($i = 6; $i >= 0; $i--) {				 $datearray[] = date("Y-m-d",strtotime("-".$i." day"));			}			$count = 7;		}elseif ($_GET['t'] == 2){			$time = strtotime(date('Y-m-d')) - 86400 * 30;			for ($i = 29; $i >= 0; $i--) {				 $datearray[] = date("Y-m-d",strtotime("-".$i." day"));			}			$count = 30;		}		for ($ii = 0; $ii < $count; $ii++) {			 $adds = M("jinbidetail")->where(array("member"=>session("username"),"addtime"=>array("between",array($time,($time+86399)))))->order("addtime asc")->sum("adds") * 1;			 $reduce = M("jinbidetail")->where(array("member"=>session("username"),"addtime"=>array("between",array($time,($time+86399)))))->order("addtime asc")->sum("reduce") * 1;			 $data[] = $adds;			 $data2[] = $reduce;			 $time += 86400;		}		$this->ajaxReturn(array("adds"=>$data,"reduce"=>$data2,"datearray"=>$datearray));	}		//ipfs账户流水	public function ipfslist() {		//流水		$page = $_POST['page'] ? $_POST['page'] : 1;		$date = $_POST['date'] ? $_POST['date'] : 0;		// dump($_POST);die;		$wherels['member'] = session('username');// 		$wherels['type'] = array('in','2,3,5,6,7,8,10,11,12,13,14,15,16,21');		if($date) {			$start_time = strtotime($date);			$end_time = $start_time + 86399;			$wherels['addtime'] = array('between',array($start_time,$end_time));		}		$detail = M('jinbidetail')->where($wherels)->order('addtime desc')->page($page.',8')->select();		foreach($detail as &$val) {			$val['adds'] = round($val['adds'],4);			$val['reduce'] = round($val['reduce'],4);		}		// dump($detail);		$this->success($detail);	}		// 可提币账户	public function fil() {	    if(IS_POST) {	        //流水    		$page = $_POST['page'] ? $_POST['page'] : 1;    		$date = $_POST['date'] ? $_POST['date'] : 0;    		// dump($_POST);die;    		$wherels['member'] = session('username');    // 		$wherels['type'] = array('in','2,3,5,6,7,8,10,11,12,13,14,15,16,21');    		if($date) {    			$start_time = strtotime($date);    			$end_time = $start_time + 86399;    			$wherels['addtime'] = array('between',array($start_time,$end_time));    		}        		$detail = M('fildetail')->where($wherels)->order('addtime desc')->page($page.',8')->select();    		foreach($detail as &$val) {    			$val['adds'] = round($val['adds'],4);    			$val['reduce'] = round($val['reduce'],4);    		}    		// dump($detail);    		$this->success($detail);	    }		$userinfo = M('member')->where(array('id'=>session('mid')))->field('ipfs,fil')->find();		$ipfs = $userinfo['ipfs'];	//ipfs账户-不可动		$fil = $userinfo['fil'];	//ipfs账户-可提				$fil_adds = M('fildetail')->where(array('type'=>2,'member'=>session('username')))->sum('adds') + 0;   // 可提现产币		$this->assign('total_fil',$fil_adds);        		//流水		$wherels['member'] = session('username');// 		$wherels['type'] = array('in','2,3,5,6,7,8,10,11,12,13,14,15,16,21');		if(!$page || $page==NULL) {			$page = 1;		}		$detail = M('fildetail')->where($wherels)->order('addtime desc')->page($page.',8')->select();		$this->assign('list',$detail);		$this->assign('ipfs',$ipfs);		$this->assign('fil',$fil);		$this->display('fil');	}			//元气账户	public function yuanqi() {		$userinfo = M('member')->where(array('id'=>session('mid')))->field('yuanqi')->find();		$yuanqi = $userinfo['yuanqi'];	//元气账户		$map['member'] = session('username');		$map['type'] = array('in','1');     //20隐藏了		$where['member'] = session('username');		$where['type'] = array('in','4');		$total_tj_profit = M('yuanqidetail')->where($map)->sum('adds');	//推荐累计收益		$total_tj_profit = $total_tj_profit ? round($total_tj_profit,2) : 0;		$total_gl_profit = M('yuanqidetail')->where($where)->sum('adds');	//管理分红收益		$total_gl_profit = $total_gl_profit ? round($total_gl_profit,2) : 0;		//流水		$wherels['member'] = session('username');		$wherels['type'] = array('in','0,1,4,7,9,11,15,20');   //20隐藏了		if(!$page || $page==NULL) {			$page = 1;		}		$detail = M('yuanqidetail')->where($wherels)->order('addtime desc')->page($page.',8')->select();// 		dump($total_tj_profit);// 		dump($total_gl_profit);        /*------------隐藏合伙人收益 start---------*///         $map['member'] = session('username');// 		$map['type'] = array('in','20');     //20隐藏了// 		$total_tj_profits = M('yuanqidetail')->where($map)->sum('adds');	//20收益总和// 		$total_tj_profits = $total_tj_profits ? round($total_tj_profits,2) : 0;// 		$jia_yuanqi = $yuanqi-$total_tj_profits;// 		$jia_yuanqi = $jia_yuanqi ? round($jia_yuanqi,2) : 0;		/*------------隐藏合伙人收益 end---------*/		$this->assign('list',$detail);		$this->assign('yuanqi',$yuanqi);		$this->assign('total_tj_profit',$total_tj_profit);		$this->assign('total_gl_profit',$total_gl_profit);		$this->display('newyuanqi');	}	//元气账户流水	public function yqlist() {		//流水		$page = $_POST['page'] ? $_POST['page'] : 1;		$type = $_POST['type'];		$date = $_POST['date'] ? $_POST['date'] : 0;		$wherels['member'] = session('username');		// dump($_POST);		$wherels['type'] = array('in','0,1,4,7,9,11,15,20');   //20隐藏了		if($date) {			$start_time = strtotime($date);			$end_time = $start_time + 86399;			$wherels['addtime'] = array('between',array($start_time,$end_time));		}		$detail = M('yuanqidetail')->where($wherels)->order('addtime desc')->page($page.',8')->select();		foreach($detail as &$val) {			$val['adds'] = round($val['adds'],2);			$val['reduce'] = round($val['reduce'],2);		}		$this->success($detail);	}		//分红收益	public function fenhon() {		$userinfo = M('member')->where(array('id'=>session('mid')))->find();		$map['member'] = session('username');		$map['type'] = array('in','5,6');		$total_sy = M('jinbidetail')->where($map)->sum('adds');	//总分红收益		$total_sy = $total_sy ? round($total_sy,2) : 0;		$map['type'] = array('eq',5);		$total_tj_profit = M('jinbidetail')->where($map)->sum('adds');	//总加权分红收益		$total_tj_profit = $total_tj_profit ? round($total_tj_profit,2) : 0;		$map['type'] = array('eq',6);		$total_gl_profit = M('jinbidetail')->where($map)->sum('adds');	//总矿池分红收益		$total_gl_profit = $total_gl_profit ? round($total_gl_profit,2) : 0;		//流水		$wherels['member'] = session('username');		$wherels['type'] = array('eq','5');		if(!$page || $page==NULL) {			$page = 1;		}		$detail = M('jinbidetail')->where($wherels)->order('addtime desc')->page($page.',8')->select();				$this->assign('list',$detail);		$this->assign('total_sy',$total_sy);		$this->assign('total_jq_profit',$total_tj_profit);		$this->assign('total_kc_profit',$total_gl_profit);		$this->display();	}	//分红收益流水	public function fhlist() {		//流水		$page = $_POST['page'] ? $_POST['page'] : 1;		$type = $_POST['type'];		$date = $_POST['date'] ? $_POST['date'] : 0;		$wherels['member'] = session('username');		// dump($_POST);		if($type == 0){			$wherels['type'] = array('eq','6');		} else{			$wherels['type'] = array('eq','5');		}		if($date) {			$start_time = strtotime($date);			$end_time = $start_time + 86399;			$wherels['addtime'] = array('between',array($start_time,$end_time));		}		$detail = M('jinbidetail')->where($wherels)->order('addtime desc')->page($page.',8')->select();		foreach($detail as &$val) {			$val['adds'] = round($val['adds'],2);			$val['reduce'] = round($val['reduce'],2);		}		$this->success($detail);	}	//推荐奖励 1 2 4	public function tjjiang() {		$userinfo = M('member')->where(array('id'=>session('mid')))->find();		$map['member'] = session('username');		$map['type'] = array('in','1,2,4');		$total_sy = M('yuanqidetail')->where($map)->sum('adds');	//总推荐奖励		$total_sy = $total_sy ? round($total_sy,2) : 0;		$map['type'] = array('in','1,2');		$total_zt_profit = M('yuanqidetail')->where($map)->sum('adds');	//总直推奖励		$total_zt_profit = $total_zt_profit ? round($total_zt_profit,2) : 0;		$map['type'] = array('eq',4);		$total_jt_profit = M('yuanqidetail')->where($map)->sum('adds');	//总间推奖励		$total_jt_profit = $total_jt_profit ? round($total_jt_profit,2) : 0;		//流水		$wherels['member'] = session('username');		$wherels['type'] = array('in','1,2');		if(!$page || $page==NULL) {			$page = 1;		}		$detail = M('yuanqidetail')->where($wherels)->order('addtime desc')->page($page.',8')->select();				$this->assign('list',$detail);		$this->assign('total_jl',$total_sy);		$this->assign('total_zt_profit',$total_zt_profit);		$this->assign('total_jt_profit',$total_jt_profit);		$this->display();	}	//推荐奖励流水	public function tjjlist() {		//流水		$page = $_POST['page'] ? $_POST['page'] : 1;		$type = $_POST['type'];		$date = $_POST['date'] ? $_POST['date'] : 0;		$wherels['member'] = session('username');		if($type == 0){			$wherels['type'] = array('eq','4');		} else{			$wherels['type'] = array('in','1,2');		}		if($date) {			$start_time = strtotime($date);			$end_time = $start_time + 86399;			$wherels['addtime'] = array('between',array($start_time,$end_time));		}		$detail = M('yuanqidetail')->where($wherels)->order('addtime desc')->page($page.',8')->select();		foreach($detail as &$val) {			$val['adds'] = round($val['adds'],2);			$val['reduce'] = round($val['reduce'],2);		}		$this->success($detail);	}	//管理奖励 3	public function gljiang() {		$userinfo = M('member')->where(array('id'=>session('mid')))->find();		$map['member'] = session('username');		$map['type'] = array('eq',3);		$total_sy = M('yuanqidetail')->where($map)->sum('adds');	//总管理奖励		$total_sy = $total_sy ? round($total_sy,2) : 0;		//流水		$wherels['member'] = session('username');		$wherels['type'] = array('eq',3);		$detail = M('yuanqidetail')->where($wherels)->field(['*','sum(adds)'=>'total_adds'])->group('source')->order('id asc')->select();		$wherels['addtime'] = array('egt',strtotime(date('Y-m-d')));		foreach($detail as &$val) {			$wherels['source'] = array('eq',$val['source']);			$val['total_adds'] = round($val['total_adds'],2);	//累计奖励			$val['today_adds'] = M('yuanqidetail')->where($wherels)->order('id asc')->sum('adds');	//今日奖励			$val['today_adds'] = $val['today_adds'] ? round($val['today_adds'],2) : 0;		}		//排序		$last_names = array_column($detail,'total_adds');		array_multisort($last_names,SORT_DESC,$detail);				$this->assign('list',$detail);		$this->assign('total_jl',$total_sy);		$this->display();	}			    public function tuiguangma(){        header ( "Content-type: text/html; charset=utf-8");        $e_keyid=encrypt(session('mid'),'E','xyb8888');        $e_keyid=str_replace('/','AAABBB',$e_keyid);        $tuiguangma = "http://".$_SERVER['SERVER_NAME'].U('Index/Sem/regSem',array('u'=>$e_keyid));        $erwei = M("member")->where(array('username'=>session('username')))->getField("erwei");        if(!$erwei){            Vendor('phpqrcode.phpqrcode');            //生成二维码图片            $object = new QRcode;            $level=3;            $size=6;            $errorCorrectionLevel =intval($level) ;//容错级别            $matrixPointSize = intval($size);//生成图片大小            $path = "Public/erwei/";            // 生成的文件名            $fileName = $path.session('username').'.png';            $object->png($tuiguangma,$fileName, $errorCorrectionLevel, $matrixPointSize, 2);            import('ORG.Util.Image');            $Image = new Image();            define('THINKIMAGE_WATER_CENTER', 5);            $Image->water(PUBLIC_PATH.'/encard.jpg',$fileName,$fileName,100,array(240,350));            $erwei = '/'.$fileName;            M("member")->where(array('username'=>session('username')))->setField("erwei",$erwei);        }        $this->assign('erwei',$erwei);        $adurl=C('adurl');        $adurl2=str_replace('[adurl]',$tuiguangma,$adurl);        $this->assign('tuiguangma',$tuiguangma);        $this->assign('adurl2',$adurl2);        $this->display();    }    public function tgm(){        header ( "Content-type: text/html; charset=utf-8");        // $e_keyid=encrypt(session('mid'),'E','xyb8888');        // $e_keyid=str_replace('/','AAABBB',$e_keyid);               $erwei = M("member")->where(array('username'=>session('username')))->getField("erwei");		$tgm = M("member")->where(array('username'=>session('username')))->getField("tgm");		$e_keyid = $tgm;		$tuiguangma = "http://".$_SERVER['SERVER_NAME'].U('Index/Sem/regSem',array('u'=>$e_keyid));		        if(!$erwei){            Vendor('phpqrcode.phpqrcode');            //生成二维码图片            $object = new QRcode;            $level=3;            $size=3;            $errorCorrectionLevel =intval($level) ;//容错级别            $matrixPointSize = intval($size);//生成图片大小            $path = "Public/erwei/";            // 生成的文件名            $fileName = $path.session('username').'.png';            $object->png($tuiguangma,$fileName, $errorCorrectionLevel, $matrixPointSize, 2);            import('ORG.Util.Image');            $Image = new Image();            define('THINKIMAGE_WATER_CENTER', 5);            $Image->water(PUBLIC_PATH.'/card.jpg',$fileName,$fileName,100,array(180,570));            $erwei = '/'.$fileName;                        // M("member")->where(array('username'=>session('username')))->setField("erwei",$erwei);        }		$bg_path = M('tgmbg')->where(array('is_on'=>1))->find();		$this->assign('bgpath',$bg_path);        $this->assign('erwei',$erwei);        $adurl=C('adurl');        $adurl2=str_replace('[adurl]',$tuiguangma,$adurl);		$this->assign('tgm',$e_keyid);        $this->assign('tuiguangma',$tuiguangma);        $this->assign('adurl2',$adurl2);        $this->display();    }    public function mrsf(){        $s_time=strtotime(date("Y-m-d 00:00:01"));        $o_time=strtotime(date("Y-m-d 23:59:59"));        $user_id = session('mid');        $username = session('username');        $member = M('member')->where(array('username'=>$username))->find();        if($member['kczc'] <= 0){            alert('您当前没有足够的矿池资产可供释放，快去用矿池钱包兑换吧!',-1);        }        $sfbl = M('member_group')->where(array('level'=>$member['level']))->getField('sfbl');        $shifang = $member['kczc'] * $sfbl;        // $map['_string'] = "(addtime > '$s_time' or addtime < '$o_time')";        $map = array();        $map['member'] = $username;        $map['desc'] =  '释放金额';        $map['addtime'] = array('between',[$s_time,$o_time]);        $todayData = M('keshoudetail')->where($map)->count();        if($todayData >= 1){            alert('您今日已经释放过金额了!',-1);        }else{            M('member') -> where(array('id'=>session('mid')))->setInc('ksye',$shifang);            keshou($username,$shifang,'释放金额',1);            M('member') -> where(array('id'=>session('mid')))->setDec('kczc',$shifang);            zichan($username,$shifang,'释放金额',0);            alert('释放成功,获得'. $shifang .'个可售余额!',-1);        }    }        public function editspwd() {    	$user = M('member')->where(array('id'=>session('mid')))->find();    	if($user['mobile'] != '') {    	    $username = $user['mobile'];    	} else{    	    $username = $user['email'];    	}    	$this->assign('username',$username);    	$this->display();    }        //设置二级密码    public function editspwdHandel() {    	$res = array('success'=>0,'msg'=>'','data'=>'');        if (IS_POST) {            $mobile = trim(I('post.mobile'));                        $tag = 'mobile';            $rst = M('member')->where(array('mobile'=>$mobile))->getField('id');            if(!$rst) {                $rst = M('member')->where(array('email'=>$mobile))->getField('id');                if(!$rst) {                    $res['msg'] = '账号不存在';				    echo json_encode($res);exit;                }                $tag = 'email';            }            $code = I('post.code','');            if(!$code){				$res['msg'] = '请输入验证码';				echo json_encode($res);exit;            }            if(preg_match("/^1[3456789]{1}\d{9}$/",$mobile)){			            $check_code = sms_code_verify($mobile,$code,session_id());		            if($check_code['status'] != 1){	            	$res['msg'] = '手机验证码不匹配或已超时！';	                echo json_encode($res);exit;	            }             } else if(preg_match("/^([a-zA-Z]|[0-9])(\w|\-)+@[a-zA-Z0-9]+\.([a-zA-Z]{2,4})$/",$mobile)) {		            $check_code = session(session_id().'code');	            $realemail = session(session_id().'email');		            if($check_code != md5($code.'mima') || $realemail != $mobile) {	            	$res['msg'] = '邮箱验证码不匹配或已超时！';	                echo json_encode($res);exit;	            }             } else {             	$res['msg'] = '手机号码或邮箱格式不正确！';                echo json_encode($res);exit;             }            $password = I('post.password2','','md5');            $password1 = I('post.password21','','md5');            if ($password != $password1) {                $res['msg'] = '密码和确认密码不一致';				echo json_encode($res);exit;                            }            //开始修改密码            $data = array();            $data['password2'] = $password;            if($tag == 'mobile') {                $rst = M('member')->where(array('mobile'=>$mobile))->save($data);            } else {                $rst = M('member')->where(array('email'=>$mobile))->save($data);            }            session(session_id().'code','');            session(session_id().'email','');			if($rst) {				$res['success'] = 1;				$res['msg'] = '交易密码设置成功';				echo json_encode($res);exit;			} else {				$res['msg'] = '您没有更改交易密码';				echo json_encode($res);exit;			}                    }    }            /**     * 实名认证页面     * author minilev     * */    public function certification() {    	$userinfo = M('member')->where(array('id'=>session('mid')))->field('id,username,truename,status,image,shenfen')->find();    	$this->assign('userinfo',$userinfo);    	$this->display();    }        /**     * 实名认证提交     * author minilev     * */    public function certificationHandel() {    	if(!IS_POST) {    		exit;    	}    	$res = array('success'=>0,'msg'=>'');    	$data['status'] = 1;    	$data['truename'] = $_POST['truename'];    	$data['shenfen'] = $_POST['shenfen'];    	$data['image'] = $_POST['image'];    	$rst = M('member')->where(array('id'=>session('mid')))->save($data);    	if(!$rst) {    		$res['msg'] = '提交失败！';    		echo json_encode($res);exit;    	}    	$res['success'] = 1;    	$res['msg'] = '提交成功！';    	echo json_encode($res);exit;    }        //ajax 图片上传    public function uploadImg(){        if(isset($_POST) and $_SERVER['REQUEST_METHOD'] == "POST"){            $name = $_FILES['img']['name'];            $size = $_FILES['img']['size'];            $file_time=date('Ymd',time());            $file_name = './Public/Uploads/cardid/'.date('Ymd');            if(!file_exists($file_name)){                mkdir($file_name);            }            $path = $file_name.'/';            $extArr = array("jpg", "png", "jpeg");            if(empty($name)){                echo json_encode(array('success' => 0,'msg'=>'请选择要上传的图片'));                return;            }            $ext = $this->extend($name);            if(!in_array($ext,$extArr)){                echo json_encode(array('success' => 0,'msg'=>'图片格式错误'));                return;            }            if($size>(300*1024*1024)){                echo json_encode(array('success' => 0,'msg'=>'图片大小不能超过3M'));                return;            }            $image_name = time().rand(100,999).".".$ext;            $tmp = $_FILES['img']['tmp_name'];            $uploadip = substr($path,9);            if(move_uploaded_file($tmp, $path.$image_name)){                echo json_encode(array('success' => 1,'msg'=>'ok','data'=>'/Public/'.$uploadip.$image_name));                return;            }else{                echo json_encode(array('success' => 0,'msg'=>'上传出错了'));                return;            }            exit;        }        exit;    }        /**     * 奖励划转至可提 55类型为划转（只在可提里显示）     * */    public function transfer() {        $token_ward = M("jinbidetail")->where(["type"=>3,"member"=>session('username')])->sum("adds") + 0;  // 累计奖励		$already_transfer = M("fildetail")->where(["type"=>55,"member"=>session('username')])->sum("adds") + 0; // 已划转		$left_transfer = $token_ward - $already_transfer > 0 ? $token_ward - $already_transfer : 0;   //剩余可划转        if(IS_POST) {            $transfer_num = I('post.transfer_num',0);            if($left_transfer <= 0) {                echo json_encode(array('success' => 0,'msg'=>'剩余可划转数量为0'));exit;            }            if($transfer_num <= 0) {                echo json_encode(array('success' => 0,'msg'=>'划转数量有误'));exit;            }            if($transfer_num > $left_transfer)  {                echo json_encode(array('success' => 0,'msg'=>'最大划转数量为'.$left_transfer));exit;            }            // 开始划转            M('member')->where(array('username'=>session('username')))->setInc('fil',$transfer_num);            jinbi(session('username'),$transfer_num,'奖励划转',1,55,'fil');            echo json_encode(array('success' => 1,'msg'=>'划转成功'));exit;        }        $this->assign('token_ward',$token_ward);        $this->assign('left_transfer',$left_transfer);        $this->display();    }}?>