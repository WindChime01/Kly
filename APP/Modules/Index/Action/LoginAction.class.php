<?php/** * 会员前台登录控制器 */Class LoginAction extends Action{    public function _initialize(){        //判断是否关闭了网站        $open_web=C('open_web');        if(empty($open_web)){            $this->open_web_notice=C('open_web_notice');            $this->display('Index:404');            exit;        }    }    public function index(){        $this->display();    }    /**     * 会员登录视图     * @return [type] [description]     */    public function logincl(){        $res = array('success'=>0,'msg'=>'');        header("Content-type:text/html;charset=utf-8");        //验证系统是否为开放状态        if (C('MEMBER_LOGIN') == 'off') {            $res['msg'] = '系统暂未开放';            echo json_encode($res);exit;            alert('系统暂未开放！',-1);        }        if (I('username')=="" || I('password')=="") {            $res['msg'] = '账号和密码不能为空';            echo json_encode($res);exit;        }        $model_m = M('member');        $rst = $model_m->where(array('mobile'=>I('username')))->find();		if(!$rst) {		    $rst = $model_m->where(array('email'=>I('username')))->find();		    if(!$rst) {		        $res['msg'] = '用户不存在';                echo json_encode($res);exit;		    }		}				// 		$rst1 = $model_m->where(array('mobile'=>I('username')))->getField('password');// 		$rst2 = $model_m->where(array('email'=>I('username')))->getField('password');// 		if(!$rst1 && !$rst2) {// 			$res['msg'] = '您的密码未启用，即将前往设置密码页面...';// 			$res['tag'] = 1;//             echo json_encode($res);exit;// 		}		// 		$member = $model_m->where(array('mobile'=>I('username')))->find();		//验证用户名和密码        $member = $model_m->where(array('mobile'=>I('username'),'password'=>I('password','','md5')))->find();        if(!$member){            $member = $model_m->where(array('email'=>I('username'),'password'=>I('password','','md5')))->find();            if(!$member) {                $res['msg'] = '密码错误';                echo json_encode($res);exit;            }                    }            //     $verify_code = trim($_POST['code']);    // 	if(!$verify_code){    // 	    $res['msg'] = '请填写验证码！';    //         echo json_encode($res);exit;    //     }    //     if($member['mobile'] != ''){	    //         $check_code = sms_code_verify($member['mobile'],$verify_code,session_id());    //         if($check_code['status'] != 1){    //             $res['msg'] = '验证码不匹配或已超时！';    //             echo json_encode($res);exit;    //         }    //     } else if($member['email'] != '') {    //         $check_code = session(session_id().'code');    //         $realemail = session(session_id().'email');    //         if($check_code != md5($verify_code.'mima') || $realemail != $member['email']) {    //             $res['msg'] = '验证码不匹配或已超时！';    //             echo json_encode($res);exit;    //         }    //     } else {    //         $res['msg'] = '账号不存在';    //         echo json_encode($res);exit;    //     }            //         //验证是否为新导入用户    // 		$rst = $model_m->where(array('username'=>I('username')))->find();    // 		if(!$rst) {    // 			$res['msg'] = '用户不存在';    //             echo json_encode($res);exit;    // 		}    // 		$rst = $model_m->where(array('username'=>I('username')))->getField('password');    // 		if(!$rst || $rst == '') {    // 			$res['msg'] = '您的密码未启用，即将前往设置密码页面...';    // 			$res['tag'] = 1;    //             echo json_encode($res);exit;    // 		}    //         //验证用户名和密码    //         $member = $model_m->where(array('username'=>I('username'),'password'=>I('password','','md5')))->find();        //         if(!$member){    //             $res['msg'] = '密码错误';    //             echo json_encode($res);exit;    //             alert('用户名或密码错误！',-1);        //         }		        //禁止锁定会员登录        if($member['lock'] == 1){            $res['msg'] = '账号已经被锁定!联系客服！';            echo json_encode($res);exit;            alert('账号已经被锁定!联系客服！',-1);        }        //更新上一次IP和登录时间        $prologin['preloginip']      = $member['loginip'];        $prologin['preloginaddress'] = '';        $prologin['prelogintime']    = $member['logintime'];        $model_m->where(array('id'   =>$member['id']))->save($prologin);        //更新最后一次登录的IP和登录时间        // $area = $Ip->getlocation(get_client_ip());        // $area = get_ip_address(get_client_ip());        $data = array(            'id'           => $member['id'],            'logintime'    => time(),            'loginip'      => '',            'loginaddress' => ''        );        $model_m->save($data);        //添加登录总次数        $model_m->where(array('username'=>I('username')))->setInc('logincount');        //保存session        session('mid',$member['id']);        session('username',$member['username']);        session('member','memberlogin');        $remember=I("post.remember",0,'intval');        $mypassword=I('post.password');        if(!empty($remember)){            setcookie('rememberusername', $member['username'], time() + 3600 * 24 * 30);            setcookie('rememberpassword', $mypassword, time() + 3600 * 24 * 30);        }else{            setcookie('rememberusername', null, time() - 3600 * 24 * 30);            setcookie('rememberpassword', null, time() - 3600 * 24 * 30);        }        //添加日志操作		$desc = '会员['.session('username').']登录';		write_log(session('username'),'member',$desc);        if($member['status']==0){            $res['success'] = 1;            $res['msg'] = '登陆成功！';            echo json_encode($res);exit;            alert('登陆成功！',U('Index/Account/shoukuanma'));        }else{            $res['success'] = 1;            $res['msg'] = '登陆成功！';            echo json_encode($res);exit;            alert('登陆成功！',U('Index/Account/gonggao'));        }    }	    /**     * 生成验证码     */    public function verify(){        import('ORG.Util.Image');        Image::buildImageVerify(4,1,'png',55,25);    }    public function showcode(){        $this->display();    }    //验证码验证    public function checkVerify($code){        if (session('verify') != $code) {            alert('验证码错误',-1);        }    }    public function checkUsername($username){        die;        if (!$id = M('member')->where(array('username'=>$username))->getField('id')) {            alert('您输入的会员账号不存在！',-1);        }else{            return $id;        }    }    //找回密码    public function findpwd(){        die;        if (IS_POST) {            header("Content-type:text/html;charset=utf-8");            $username = I('post.username','','strval');            $code = I('post.code','','md5');            if ($username == '' || $code == '') {                alert('请输入您的会员编号或验证码!',-1);            }else{                $this->checkVerify($code);                $this->checkUsername($username);                alert('验证通过!',U(GROUP_NAME.'/Login/checkQuestion',array('u'=>$username)));            }        }        $this->display();    }    //修改密码    public function editPwd(){        header("Content-type:text/html;charset=utf-8");        $this->display();    }    public function xgpost(){		header("Content-type:text/html;charset=utf-8");		$res = array('success'=>0,'msg'=>'','data'=>'');        if (IS_POST) {            $mobile = trim(I('post.mobile'));            $tag = 'mobile';            $rst = M('member')->where(array('mobile'=>$mobile))->getField('id');            if(!$rst) {                $rst = M('member')->where(array('email'=>$mobile))->getField('id');                if(!$rst) {                    $res['msg'] = '账号不存在';				    echo json_encode($res);exit;                }                $tag = 'email';            }            $code = I('post.code','');            if(!$code){				$res['msg'] = '请输入验证码';				echo json_encode($res);exit;            }            if(preg_match("/^1[3456789]{1}\d{9}$/",$mobile)){			            $check_code = sms_code_verify($mobile,$code,session_id());		            if($check_code['status'] != 1){	            	$res['msg'] = '手机验证码不匹配或已超时！';	                echo json_encode($res);exit;	            }             } else if(preg_match("/^([a-zA-Z]|[0-9])(\w|\-)+@[a-zA-Z0-9]+\.([a-zA-Z]{2,4})$/",$mobile)) {		            $check_code = session(session_id().'code');	            $realemail = session(session_id().'email');		            if($check_code != md5($code.'mima') || $realemail != $mobile) {	            	$res['msg'] = '邮箱验证码不匹配或已超时！';	                echo json_encode($res);exit;	            }             } else {             	$res['msg'] = '手机号码或邮箱格式不正确！';                echo json_encode($res);exit;             }            $password = I('post.password','','md5');            $password1 = I('post.password1','','md5');            if ($password != $password1) {                $res['msg'] = '密码和确认密码不一致';				echo json_encode($res);exit;                            }            //开始修改密码            $data = array();            $data['password'] = $password;                        if($tag == 'mobile') {                $rst = M('member')->where(array('mobile'=>$mobile))->save($data);            } else {                $rst = M('member')->where(array('email'=>$mobile))->save($data);            }            session(session_id().'code','');            session(session_id().'email','');			if($rst) {				$res['success'] = 1;				$res['msg'] = '密码重置成功';				echo json_encode($res);exit;			} else {				$res['msg'] = '您没有更改密码';				echo json_encode($res);exit;			}                    }    }}?>