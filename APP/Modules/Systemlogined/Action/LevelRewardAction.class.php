<?php  	/**	* 会员管理控制器	*/	class LevelRewardAction extends CommonAction{		    //会员等级分红列表页面		    public function level_reward_set_list(){		        $list = M('level_reward_set')->select();		        $list2 = M('team_level_group')->select();		        foreach ($list as &$value) {		        	foreach ($list2 as &$value2) {		        		if($value['level']==$value2['id']){		        			$value['level_name'] = $value2['name'];		        			$value['condition'] = $value2['condition'];		        		}		        	}		        }		        // echo "<pre>";		        // var_dump($list);die;		        $this->assign('list',$list);		        $this->display('level_reward_set_list');		    }		    //添加会员等级分红的页面		    public function add_level_reward_set(){		    	$list = M('team_level_group')->select();		    	$this->assign('list',$list);		        $this->display('add_level_reward_set');		    }		    //添加团队表单处理		    public function addLevelRewardSetHandle(){		    	if(empty($_POST['level'])){		    		$this->error('请选择等级');die;		    	}		    	if(empty($_POST['rate'])){		    		$this->error('请填写比例');die;		    	} 		        if (M('level_reward_set')->add($_POST)) {		            //添加日志操作		            $desc = '添加一个新的节点代币奖励';		            write_log(session('username'),'admin',$desc);		            $this->success('添加成功',U(GROUP_NAME.'/LevelReward/level_reward_set_list'));		        }else{		            $this->error('添加失败');		        }		    }		    //修改会员等级分红的页面		    public function	edit_level_reward_set(){		        // dump($_SESSION);		        $level_reward_set = M('level_reward_set')->where(array('id'=>I('id')))->find();		        $list = M('team_level_group')->select();		        $this->assign('level_reward_set',$level_reward_set);		        $this->assign('list',$list);		        $this->display('edit_level_reward_set');		    }		    //修改会员等级分红的处理		    public function editLevelRewardSetHandle(){		        $id = I('id',0,'intval');		        unset($_POST['id']);		        M('level_reward_set')->where(array('id'=>$id))->save($_POST);		        //添加日志		        $desc = '修改ID为'. id .'的节点代币奖励';		        write_log(session('username'),'admin',$desc);		        $this->success('节点代币奖励修改成功!',U(GROUP_NAME.'/LevelReward/level_reward_set_list'));		    }		    public function del_level_reward_set(){				$id = I('id');				$level_reward_set = M("level_reward_set");				$map['id'] = array('in',$id);				if($level_reward_set -> where($map) -> delete($id)){						//添加日志操作						$desc = '删除一个会员等级分红';					    write_log(session('username'),'admin',$desc);						$this->success('删除会员等级分红成功',U(GROUP_NAME .'/LevelReward/level_reward_set_list'));				}else{					$this -> error("删除失败");				}			}			/**			  * 加权平均列表			  * @return $all_member				   全部会员的信息			  * @return $large				       大区的业绩			  * @return $total				       总业绩			  * @return $little_sum				   小区的总和业绩			  */			public function level_reward_list(){				$Data = M('jinbidetail'); // 实例化Data数据对象				import("@.ORG.Util.Page");// 导入分页类		        $total_coins = C('total_coins');		        $able_coins = C('total_coins')*96/100;				// $all_member = M('member')->alias('a')->join('ds_team_level_group  as b on a.level = b.level')->field('a.id,a.level,a.username,a.mobile,b.name as level_name')->order('level desc')->order('id')->limit($Page ->firstRow.','.$Page -> listRows)->select();							$all_member = M('member')->field('id,level,truename,mobile')->group('level desc,id asc')->select();				$level_group = M('team_level_group')->field('id,level,name')->select();				$today = strtotime(date('Y-m-d',time()));				$where = '';				$where['kj_addtime'] = array('lt',$today);				$where['zt'] = 1;				$total_suanli = M('order')->where($where)->sum('lixi');				foreach ($all_member as &$vv) {					$vv['level_name'] = '无';					foreach ($level_group as &$vv2) {						if($vv['level']==$vv2['level']){							$vv['level_name'] = $vv2['name'];						}					}					$where['user_id'] = $vv['id'];					$suanli = M('order')->where($where)->sum('lixi');					$vv['suanli'] = !empty($suanli)?$suanli:0;					$vv['coin'] = floor(($able_coins/$total_suanli)*$vv['suanli'] * 10000) / 10000;					//查询					if(!empty($_GET['typename'])){						$type = $_GET['type'];						$typename = trim($_GET['typename']);						if($type ==1){							if($vv["id"]==$typename){								$select_member[] = $vv;							}						}elseif($type ==2){							if($vv["level_name"]==$typename){								$select_member[] = $vv;							}						}elseif($type ==3){							if($vv["truename"]==$typename){								$select_member[] = $vv;							}						}elseif($type ==4){							if($vv["mobile"]==$typename){								$select_member[] = $vv;							}						}					}				}							$all_count = count($all_member);// 查询满足要求的总记录数				$select_count = count($select_member);// 查询满足要求的总记录数		        $all_Page  = new Page($all_count,10);// 实例化分页类 传入总记录数		        $select_Page  = new Page($select_count,10);// 实例化分页类 传入总记录数		        if(empty($Page -> listRows)) $Page -> listRows=10;			    $all_member_reward = array_slice($all_member, $all_Page ->firstRow,$Page -> listRows,true);			    $select_member_reward = array_slice($select_member, $select_Page ->firstRow,$Page -> listRows,true);				$today = date('Y-m-d',time());			    $reward_ret = M('reward_status')->where(array('date'=>$today))->find();			    if(!$reward_ret){					$reward_status = '一键分配';			    }else{			    	if($reward_ret['jackpot_status']==0){			    		$reward_status = '一键分配';			    	}else{			    		$reward_status = '已分配';			    	}			    }				$this->assign('reward_status',$reward_status);				$this->assign('total_coins',$total_coins);				$this->assign('able_coins',$able_coins);								if(!empty($_GET['typename'])){					$show = $select_Page->show();// 分页显示输出					$this->assign('page',$show);// 赋值分页输出					$this->assign('type',$_GET['type']);					$this->assign('typename',$_GET['typename']);					$this->assign('list',$select_member_reward);				}else{					$show = $all_Page->show();// 分页显示输出					$this->assign('page',$show);// 赋值分页输出					$this->assign('list',$all_member_reward);				}				$this->display();			}			/**			  * 加权平均列表			  * @return $all_member				   全部会员的信息			  * @return $large				       大区的业绩			  * @return $total				       总业绩			  * @return $little_sum				   小区的总和业绩			  */			public function level_reward_list2(){				// echo "<pre>";				$Data = M('jinbidetail'); // 实例化Data数据对象				import("@.ORG.Util.Page");// 导入分页类		        $total_coins = C('total_coins');		        $able_coins = 0;				// $all_member = M('member')->alias('a')->join('ds_team_level_group  as b on a.level = b.level')->field('a.id,a.level,a.username,a.mobile,b.name as level_name')->order('level desc')->order('id')->limit($Page ->firstRow.','.$Page -> listRows)->select();							$all_member = M('member')->alias('a')->join('ds_level_reward_set as b on a.level = b.level')->join('ds_team_level_group as c on a.level = c.level')->field('a.id,a.level,a.truename,a.mobile,b.rate,c.name as level_name')->group('a.level desc,a.id asc')->select();				// $level_group = M('team_level_group')->field('id,level,name')->select();				$today = strtotime(date('Y-m-d',time()));				$where = '';				$where['kj_addtime'] = array('lt',$today);				$where['zt'] = 1;				$total_suanli = M('order')->where($where)->sum('lixi');				$new_member = array();				$num = 1;				foreach ($all_member as &$vv) {					$vv['level_name'] = !empty($vv['level_name'] )?$vv['level_name'] :'无';					$vv['rate'] = !empty($vv['rate'] )?$vv['rate'] :0;					// foreach ($level_group as &$vv2) {					// 	if($vv['level']==$vv2['level']){					// 		$vv['level_name'] = $vv2['name'];					// 	}					// }					$d_member = M('member')->field('id,username')->where(array('parent_id'=>$vv['id']))->select();										foreach ($d_member as $vv3) {						$where['user_id'] = $vv3['id'];						$suanli = M('order')->where($where)->sum('lixi');						$suanli = !empty($suanli)?$suanli:0;						$coin = floor(($total_coins/$total_suanli)*$suanli*$vv['rate']/100 * 10000) / 10000;						// $vv['level']=>M('')											if($vv['level']>2 && $coin>0){							$temp = array(								'id'=>$num,								'user_id'=>$vv['user_id'],								'truename'=>$vv['truename'],								'level_name'=>$vv['level_name'],								'mobile'=>$vv['mobile'],								'rate'=>$vv['rate'],								'source'=>$vv3['username'],								'coin'=>$coin							);							$new_member[] = $temp;							$able_coins+=$coin;							$num++;							// //查询							if(!empty($_GET['typename'])){								$type = $_GET['type'];								$typename = trim($_GET['typename']);								if($type ==1){									if($vv["truename"]==$typename){										$select_member[] = $temp;									}								}elseif($type ==2){									if($vv["mobile"]==$typename){										$select_member[] = $temp;									}								}elseif($type ==3){									if($vv["level_name"]==$typename){										$select_member[] = $temp;									}								}elseif($type ==4){									if($vv3['username']==$typename){										$select_member[] = $temp;									}								}							}						}					}									}				// var_dump($new_member);die;							$all_count = count($new_member);// 查询满足要求的总记录数				$select_count = count($select_member);// 查询满足要求的总记录数		        $all_Page  = new Page($all_count,10);// 实例化分页类 传入总记录数		        $select_Page  = new Page($select_count,10);// 实例化分页类 传入总记录数		        if(empty($Page -> listRows)) $Page -> listRows=10;			    $new_member_reward = array_slice($new_member, $all_Page ->firstRow,$Page -> listRows,true);			    $select_member_reward = array_slice($select_member, $select_Page ->firstRow,$Page -> listRows,true);				$today = date('Y-m-d',time());			    $reward_ret = M('reward_status')->where(array('date'=>$today))->find();			    if(!$reward_ret){					$reward_status = '一键分配';			    }else{			    	if($reward_ret['jackpot_status2']==0){			    		$reward_status = '一键分配';			    	}else{			    		$reward_status = '已分配';			    	}			    }				$this->assign('reward_status',$reward_status);				$this->assign('total_coins',$total_coins);				$this->assign('able_coins',$able_coins);								if(!empty($_GET['typename'])){					$show = $select_Page->show();// 分页显示输出					$this->assign('page',$show);// 赋值分页输出					$this->assign('type',$_GET['type']);					$this->assign('typename',$_GET['typename']);					$this->assign('list',$select_member_reward);				}else{					$show = $all_Page->show();// 分页显示输出					$this->assign('page',$show);// 赋值分页输出					$this->assign('list',$new_member_reward);				}				$this->display();			}			/**			  * 加权等级升级			  * @param  $weighted_level            加权的级别			  * @param  $all_member                全部会员的信息			  * @param  $level_condition           加权等级的条件			  * @param  $v4_condition              加权v4的条件			  * @return $all_member				   全部会员的信息			  * @return $large				       大区的业绩			  * @return $total				       总业绩			  * @return $little_sum				   小区的总和业绩			  */			function level_num($weighted_level,$all_member,$level_condition,$level_num){				foreach ($all_member as $val2) {					$count = M('member')->where(array('parent_id'=>$val2['id'],'weighted_level'=>$level_condition))->count();					if($count>=$level_num){						$now_level = M('member')->where(array('id'=>$val2['id']))->getField('weighted_level');						if($now_level<$weighted_level){							M('member')->where(array('id'=>$val2['id']))->save(array('weighted_level'=>$weighted_level));						}					}				}			}			/**			  * 找出自己下面所有成员里业绩最好的成员的业绩			  * @param  $id               id			  * @return string			  */			 public function max($id){			     $list = M('member')->field('id,parent_id,achievement')->select();			     $push_member = M('member')->where(array("parent_id"=>$id))->select();			     foreach($push_member as $v){			         $push_member2['id'][]= $v['id'];			         $push_member2['achievement'][]= $v['achievement'];			     }			     $maxkey = array_search(max($push_member2['achievement']),$push_member2['achievement']);			     return $push_member2['achievement'][$maxkey];			 }			 //获取最顶级ID			 function get_f_parent_id($id){			 	$user_info = M('member')->field('id,username,mobile,level,parent_id')->where(array('id'=>$id))->find();			 	if($user_info['parent_id']!=0){			 		$leader_info = M('member')->field('id,username,truename,mobile,is_partner,level,parent_id')->where(array('id'=>$user_info['parent_id']))->find();			 		if($leader_info['is_partner']==1){			 			return array(			 				'user_id'=>$leader_info['id'],			 				'truename'=>$leader_info['truename'],			 				'username'=>$leader_info['username']			 			);			 		}			 		$this->get_f_parent_id($user_info['parent_id']);			 	}			 	return NULL;			 }		 		/**		 		  * 矿池收益一键分配		 		  * @param  $total_coins               今日矿池代币总量		 		  * @param  $weighted_average_set      加权平均设置的数据		 		  * @param  $v4_condition              加权v4的条件		 		  * @return $all_member				   全部会员的信息		 		  * @return $num				   	   加权平均等级对应的人数		 		  * @return $rate				       加权平均等级对应的奖励比例		 		  * @return $reward				       加权平均等级对应的奖励总和		 		  * @return $weighted_average		   加权平均对应等级下每个人能分到的值		 		  * @return string		 		  */		 		 public function change_reward_status(){					$Data = M('jinbidetail'); // 实例化Data数据对象					import("@.ORG.Util.Page");// 导入分页类			        $total_coins = C('total_coins');			        $able_coins = C('total_coins')*96/100;					// $all_member = M('member')->alias('a')->join('ds_team_level_group  as b on a.level = b.level')->field('a.id,a.level,a.username,a.mobile,b.name as level_name')->order('level desc')->order('id')->limit($Page ->firstRow.','.$Page -> listRows)->select();								$all_member = M('member')->field('id,level,username,mobile')->group('level desc,id asc')->select();					$level_group = M('team_level_group')->field('id,level,name')->select();					$today = strtotime(date('Y-m-d',time()));					$where = '';					$where['kj_addtime'] = array('lt',$today);					$where['zt'] = 1;					$total_suanli = M('order')->where($where)->sum('lixi');					foreach ($all_member as &$vv) {						$vv['level_name'] = '无';						foreach ($level_group as &$vv2) {							if($vv['level']==$vv2['level']){								$vv['level_name'] = $vv2['name'];							}						}						$where['user_id'] = $vv['id'];						$suanli = M('order')->where($where)->sum('lixi');						$vv['suanli'] = !empty($suanli)?$suanli:0;						$vv['coin'] = floor(($able_coins/$total_suanli)*$vv['suanli'] * 10000) / 10000;					}							 		    $day = date('Y-m-d',time());		 		    $reward_status = M('reward_status')->where(array('date'=>$day))->find();		 		    		 		    $data = array(		 		    	'total_coins' => $total_coins,		 		    	'date' => $day,		 		    	'jackpot_status' =>1,		 		    );		 		    if(!$reward_status){		 		    	M('reward_status')->add($data);		 		    	foreach ($all_member as $value) {		 		    		if($value['coin']>0){		 		    			M('member')->where(array('id'=>$value['id']))->setInc('ipfs',$value['coin']);		 		    			jinbi($value['username'],$value['coin'],'产出',1,2,'ipfs');		 		    			//管理代币奖		 		    			$get_f_parent_name = $this->get_f_parent_id($value['id']);		 		    			if($get_f_parent_name){			 		    			$partner_coin = $value['coin']*C('partner_fil_rate')/100;			 		    			if($partner_coin > 0) {			 		    			    M('member')->where(array('id'=>$get_f_parent_name['user_id']))->setInc('ipfs',$partner_coin);			 		    			    jinbi($get_f_parent_name['username'],$partner_coin,'管理奖',1,21,'ipfs',$value['username']);			 		    			}			 		    			}		 		    		}		 		    	}		 		    	echo json_encode(array('msg' => '分配成功','status'=>'已分配'));die;		 		    }else{		 		    	if($reward_status['jackpot_status']==0){		 		    		foreach ($all_member as $value) {		 		    			if($value['coin']>0){		 		    				M('member')->where(array('id'=>$value['id']))->setInc('ipfs',$value['coin']);		 		    				jinbi($value['username'],$value['coin'],'产出',1,2,'ipfs');			 		    			//管理代币奖			 		    			$get_f_parent_name = $this->get_f_parent_id($value['id']);			 		    			if($get_f_parent_name){				 		    			$partner_coin = $value['coin']*C('partner_fil_rate')/100;				 		    			if($partner_coin > 0) {				 		    			    M('member')->where(array('id'=>$get_f_parent_name['user_id']))->setInc('ipfs',$partner_coin);				 		    			    jinbi($get_f_parent_name['username'],$partner_coin,'管理奖',1,21,'ipfs',$value['username']);				 		    			}			 		    			}		 		    			}		 		    		}		 			    	M('reward_status')->where(array('date'=>$day))->save(array('jackpot_status' =>1));		 			    	echo json_encode(array('msg' => '分配成功','status'=>'已分配'));die;		 		    	}else{		 		    		echo json_encode(array('msg'=>'你已分配过','status'=>'已分配'));die;		 		    	}		 		    }		 		    		 		 }		  		/**		  		  * 节点代币一键分配		  		  * @param  $total_coins               今日矿池代币总量		  		  * @param  $weighted_average_set      加权平均设置的数据		  		  * @param  $v4_condition              加权v4的条件		  		  * @return $all_member				   全部会员的信息		  		  * @return $num				   	   加权平均等级对应的人数		  		  * @return $rate				       加权平均等级对应的奖励比例		  		  * @return $reward				       加权平均等级对应的奖励总和		  		  * @return $weighted_average		   加权平均对应等级下每个人能分到的值		  		  * @return string		  		  */		  		 public function change_reward_status2(){ 					$Data = M('jinbidetail'); // 实例化Data数据对象					import("@.ORG.Util.Page");// 导入分页类			        $total_coins = C('total_coins');			        $able_coins = 0;					// $all_member = M('member')->alias('a')->join('ds_team_level_group  as b on a.level = b.level')->field('a.id,a.level,a.username,a.mobile,b.name as level_name')->order('level desc')->order('id')->limit($Page ->firstRow.','.$Page -> listRows)->select();								$all_member = M('member')->alias('a')->join('ds_level_reward_set as b on a.level = b.level')->join('ds_team_level_group as c on a.level = c.level')->field('a.id,a.level,a.username,a.mobile,b.rate,c.name as level_name')->group('a.level desc,a.id asc')->select();					// $level_group = M('team_level_group')->field('id,level,name')->select();					$today = strtotime(date('Y-m-d',time()));					$where = '';					$where['kj_addtime'] = array('lt',$today);					$where['zt'] = 1;					$total_suanli = M('order')->where($where)->sum('lixi');					$new_member = array();					$num = 1;					foreach ($all_member as &$vv) {						$vv['level_name'] = !empty($vv['level_name'] )?$vv['level_name'] :'无';						$vv['rate'] = !empty($vv['rate'] )?$vv['rate'] :0;						// foreach ($level_group as &$vv2) {						// 	if($vv['level']==$vv2['level']){						// 		$vv['level_name'] = $vv2['name'];						// 	}						// }						$d_member = M('member')->field('id,username')->where(array('parent_id'=>$vv['id']))->select();												foreach ($d_member as $vv3) {							$where['user_id'] = $vv3['id'];							$suanli = M('order')->where($where)->sum('lixi');							$suanli = !empty($suanli)?$suanli:0;							$coin = floor(($total_coins/$total_suanli)*$suanli*$vv['rate']/100 * 10000) / 10000;							// $vv['level']=>M('')													if($vv['level']>2 && $coin>0){								$temp = array(									'id'=>$num,									'user_id'=>$vv['id'],									'username'=>$vv['username'],									'level_name'=>$vv['level_name'],									'mobile'=>$vv['mobile'],									'rate'=>$vv['rate'],									'source'=>$vv3['username'],									'coin'=>$coin								);								$new_member[] = $temp;								$able_coins+=$coin;								$num++;							}						}					}		  		    $day = date('Y-m-d',time());		  		    $reward_status = M('reward_status')->where(array('date'=>$day))->find();		  		    		  		    $data = array(		  		    	'total_coins' => $total_coins,		  		    	'date' => $day,		  		    	'jackpot_status2' =>1,		  		    );		  		    if(!$reward_status){		  		    	M('reward_status')->add($data);		  		    	foreach ($new_member as $value) {		  		    		if($value['coin']>0){		  		    			M('member')->where(array('id'=>$value['user_id']))->setInc('ipfs',$value['coin']);		  		    			jinbi($value['username'],$value['coin'],'奖励',1,3,'ipfs',$value['source']);		  		    		}		  		    	}		  		    	echo json_encode(array('msg' => '分配成功','status'=>'已分配'));die;		  		    }else{		  		    	if($reward_status['jackpot_status2']==0){		  		    		foreach ($new_member as $value) {		  		    			if($value['coin']>0){		  		    				M('member')->where(array('id'=>$value['user_id']))->setInc('ipfs',$value['coin']);		  		    				jinbi($value['username'],$value['coin'],'奖励',1,3,'ipfs',$value['source']);		  		    			}		  		    		}		  			    	M('reward_status')->where(array('date'=>$day))->save(array('jackpot_status2' =>1));		  			    	echo json_encode(array('msg' => '分配成功','status'=>'已分配'));die;		  		    	}else{		  		    		echo json_encode(array('msg'=>'你已分配过','status'=>'已分配'));die;		  		    	}		  		    }		  		    		  		 }					//导出全部/excel		        public function excel() {					$Data = M('jinbidetail'); // 实例化Data数据对象					import("@.ORG.Util.Page");// 导入分页类			        $total_coins = C('total_coins');                    $able_coins = C('total_coins')*96/100;					// $all_member = M('member')->alias('a')->join('ds_team_level_group  as b on a.level = b.level')->field('a.id,a.level,a.username,a.mobile,b.name as level_name')->order('level desc')->order('id')->limit($Page ->firstRow.','.$Page -> listRows)->select();								$all_member = M('member')->field('id,level,username,mobile,my_sl')->group('level desc,id asc')->select();					$level_group = M('team_level_group')->field('id,level,name')->select();					$today = strtotime(date('Y-m-d',time()));					$where = '';					$where['kj_addtime'] = array('lt',$today);					$where['zt'] = 1;					$total_suanli = M('order')->where($where)->sum('lixi');					foreach ($all_member as &$vv) {						$vv['level_name'] = '无';						foreach ($level_group as &$vv2) {							if($vv['level']==$vv2['level']){								$vv['level_name'] = $vv2['name'];							}						}						$where['user_id'] = $vv['id'];						$suanli = M('order')->where($where)->sum('lixi');						$vv['suanli'] = !empty($suanli)?$suanli:0;						$vv['coin'] = floor(($able_coins/$total_suanli)*$vv['suanli'] * 10000) / 10000;						//查询						if(!empty($_POST['typename'])){							$type = $_POST['type'];							$typename = $_POST['typename'];							if($type ==1){								if($vv["id"]==$typename){									$select_member[] = $vv;								}							}elseif($type ==2){								if($vv["level_name"]==$typename){									$select_member[] = $vv;								}							}elseif($type ==3){								if($vv["username"]==$typename){									$select_member[] = $vv;								}							}elseif($type ==4){								if($vv["mobile"]==$typename){									$select_member[] = $vv;								}							}						}					}					if($_GET['type']==1){						if(!empty($_POST['typename'])){							$list = $select_member;						}else{							$list = $all_member;						}					}else{						$list = $all_member;					}		            require_once ROOT_PATH . '/extend/lib/PHPExcel/Classes/PHPExcel.php';		            $objPHPExcel = new \PHPExcel();		            //列宽 自适应		            $objPHPExcel->getActiveSheet()->getColumnDimension('A')->setWidth(10);		            $objPHPExcel->getActiveSheet()->getColumnDimension('B')->setWidth(10);		            $objPHPExcel->getActiveSheet()->getColumnDimension('C')->setAutoSize(true);		            $objPHPExcel->getActiveSheet()->getColumnDimension('D')->setAutoSize(true);		            $objPHPExcel->getActiveSheet()->getColumnDimension('E')->setWidth(10);		            $objPHPExcel->getActiveSheet()->getColumnDimension('F')->setWidth(15);		            $objPHPExcel->getActiveSheet()->getColumnDimension('G')->setAutoSize(true);		            //根据excel坐标，添加数据		            $objPHPExcel->setActiveSheetIndex(0)		                ->setCellValue('A1', '编号')		                ->setCellValue('B1', '级别')		                ->setCellValue('C1', '姓名')		                ->setCellValue('D1', '手机号码')		                ->setCellValue('E1', '昨天算力')		                ->setCellValue('F1', '昨天产出');		            foreach($list as $key=>$val){		                $num = $key +2;		                $A = 'A'.$num;		                $B = 'B'.$num;		                $C = 'C'.$num;		                $D = 'D'.$num;		                $E = 'E'.$num;		                $F = 'F'.$num;		                $G = 'G'.$num;		                $objPHPExcel->setActiveSheetIndex(0)		                    ->setCellValue($A,$val['id'])		                    ->setCellValue($B,$val['level_name'])		                    ->setCellValue($C,$val['username'])		                    ->setCellValue($D,$val['mobile'])		                    ->setCellValue($E,$val['suanli'])		                    ->setCellValue($F,$val['coin']);		            }		            $showtime = date('Ymdhis');		            $file_name = '矿池收益列表'.$showtime.'.xlsx';		            /*生成文件并下载*/		            header('Content-Type: application/vnd.ms-excel');		            // header('Content-Disposition: attachment;filename="'.'data.xlsx"');		            header('Content-Disposition: attachment;filename="'.$file_name.'"');		            header('Cache-Control: max-age=0');		            $objWriter = \PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel2007');		            $objWriter->save('php://output');		            #释放内存		            unset($objWriter);		            unset($objPHPExcel);		            $desc = '导出全部订单';					write_log(session('adminusername'),'admin',$desc);		        }		        //导出全部/excel                public function excel2() {        			// echo "<pre>";					$Data = M('jinbidetail'); // 实例化Data数据对象					import("@.ORG.Util.Page");// 导入分页类			        $total_coins = C('total_coins');			        $able_coins = 0;					// $all_member = M('member')->alias('a')->join('ds_team_level_group  as b on a.level = b.level')->field('a.id,a.level,a.username,a.mobile,b.name as level_name')->order('level desc')->order('id')->limit($Page ->firstRow.','.$Page -> listRows)->select();								$all_member = M('member')->alias('a')->join('ds_level_reward_set as b on a.level = b.level')->join('ds_team_level_group as c on a.level = c.level')->field('a.id,a.level,a.username,a.mobile,b.rate,c.name as level_name')->group('a.level desc,a.id asc')->select();					// $level_group = M('team_level_group')->field('id,level,name')->select();					$today = strtotime(date('Y-m-d',time()));					$where = '';					$where['kj_addtime'] = array('lt',$today);					$where['zt'] = 1;					$total_suanli = M('order')->where($where)->sum('lixi');					$new_member = array();					$num = 1;					foreach ($all_member as &$vv) {						$vv['level_name'] = !empty($vv['level_name'] )?$vv['level_name'] :'无';						$vv['rate'] = !empty($vv['rate'] )?$vv['rate'] :0;						// foreach ($level_group as &$vv2) {						// 	if($vv['level']==$vv2['level']){						// 		$vv['level_name'] = $vv2['name'];						// 	}						// }						$d_member = M('member')->field('id,username')->where(array('parent_id'=>$vv['id']))->select();												foreach ($d_member as $vv3) {							$where['user_id'] = $vv3['id'];							$suanli = M('order')->where($where)->sum('lixi');							$suanli = !empty($suanli)?$suanli:0;							$coin = floor(($total_coins/$total_suanli)*$suanli*$vv['rate']/100 * 10000) / 10000;							// $vv['level']=>M('')													if($vv['level']>2 && $coin>0){								$temp = array(									'id'=>$num,									'user_id'=>$vv['user_id'],									'username'=>$vv['username'],									'level_name'=>$vv['level_name'],									'mobile'=>$vv['mobile'],									'rate'=>$vv['rate'],									'source'=>$vv3['username'],									'coin'=>$coin								);								$new_member[] = $temp;								$able_coins+=$coin;								$num++;								// //查询								if(!empty($_POST['typename'])){									$type = $_POST['type'];									$typename = trim($_POST['typename']);									if($type ==1){										if($vv["username"]==$typename){											$select_member[] = $temp;										}									}elseif($type ==2){										if($vv["mobile"]==$typename){											$select_member[] = $temp;										}									}elseif($type ==3){										if($vv["level_name"]==$typename){											$select_member[] = $temp;										}									}elseif($type ==4){										if($vv3['username']==$typename){											$select_member[] = $temp;										}									}								}							}						}											}        			if($_GET['type']==1){        				if(!empty($_POST['typename'])){        					$list = $select_member;        				}else{        					$list = $new_member;        				}        			}else{        				$list = $new_member;        			}                    require_once ROOT_PATH . '/extend/lib/PHPExcel/Classes/PHPExcel.php';                    $objPHPExcel = new \PHPExcel();                    //列宽 自适应                    $objPHPExcel->getActiveSheet()->getColumnDimension('A')->setWidth(10);                    $objPHPExcel->getActiveSheet()->getColumnDimension('B')->setWidth(20);                    $objPHPExcel->getActiveSheet()->getColumnDimension('C')->setWidth(20);                    $objPHPExcel->getActiveSheet()->getColumnDimension('D')->setWidth(15);                    $objPHPExcel->getActiveSheet()->getColumnDimension('E')->setWidth(10);                    $objPHPExcel->getActiveSheet()->getColumnDimension('F')->setWidth(15);                    $objPHPExcel->getActiveSheet()->getColumnDimension('G')->setWidth(15);                    //根据excel坐标，添加数据                    $objPHPExcel->setActiveSheetIndex(0)                        ->setCellValue('A1', '编号')                        ->setCellValue('B1', '姓名')                        ->setCellValue('C1', '手机号')                        ->setCellValue('D1', '级别')                        ->setCellValue('E1', '奖励比例')                        ->setCellValue('F1', '来源')                        ->setCellValue('G1', '奖励fil');                    foreach($list as $key=>$val){                        $num = $key +2;                        $A = 'A'.$num;                        $B = 'B'.$num;                        $C = 'C'.$num;                        $D = 'D'.$num;                        $E = 'E'.$num;                        $F = 'F'.$num;                        $G = 'G'.$num;                        $objPHPExcel->setActiveSheetIndex(0)                            ->setCellValue($A,$val['id'])                            ->setCellValue($B,$val['username'])                            ->setCellValue($C,$val['mobile'])                            ->setCellValue($D,$val['level_name'])                            ->setCellValue($E,$val['rate'])                            ->setCellValue($F,$val['source'])                            ->setCellValue($G,$val['coin']);                    }                    $showtime = date('Ymdhis');                    $file_name = '节点代币列表'.$showtime.'.xlsx';                    /*生成文件并下载*/                    header('Content-Type: application/vnd.ms-excel');                    // header('Content-Disposition: attachment;filename="'.'data.xlsx"');                    header('Content-Disposition: attachment;filename="'.$file_name.'"');                    header('Cache-Control: max-age=0');                    $objWriter = \PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel2007');                    $objWriter->save('php://output');                    #释放内存                    unset($objWriter);                    unset($objPHPExcel);                    $desc = '导出全部订单';        			write_log(session('adminusername'),'admin',$desc);                }                /**			  * 新可提现fil币分币列表			  */			public function new_level_reward_list(){				$Data = M('jinbidetail'); // 实例化Data数据对象				import("@.ORG.Util.Page");// 导入分页类		        $total_coins = C('fil_total_coins');		        $able_coins = $total_coins;				// $all_member = M('member')->alias('a')->join('ds_team_level_group  as b on a.level = b.level')->field('a.id,a.level,a.username,a.mobile,b.name as level_name')->order('level desc')->order('id')->limit($Page ->firstRow.','.$Page -> listRows)->select();							$all_member = M('member')->field('id,level,truename,mobile')->group('level desc,id asc')->select();				$level_group = M('team_level_group')->field('id,level,name')->select();				$today = strtotime(date('Y-m-d',time()));				$where = '';				$where['kj_addtime'] = array('lt',$today);				$where['zt'] = 1;				$total_suanli = M('order')->where($where)->sum('lixi');				foreach ($all_member as &$vv) {					$vv['level_name'] = '无';					foreach ($level_group as &$vv2) {						if($vv['level']==$vv2['level']){							$vv['level_name'] = $vv2['name'];						}					}					$where['user_id'] = $vv['id'];					$suanli = M('order')->where($where)->sum('lixi');					$vv['suanli'] = !empty($suanli)?$suanli:0;					$vv['coin'] = floor(($able_coins/$total_suanli)*$vv['suanli'] * 10000) / 10000;					//查询					if(!empty($_GET['typename'])){						$type = $_GET['type'];						$typename = trim($_GET['typename']);						if($type ==1){							if($vv["id"]==$typename){								$select_member[] = $vv;							}						}elseif($type ==2){							if($vv["level_name"]==$typename){								$select_member[] = $vv;							}						}elseif($type ==3){							if($vv["truename"]==$typename){								$select_member[] = $vv;							}						}elseif($type ==4){							if($vv["mobile"]==$typename){								$select_member[] = $vv;							}						}					}				}							$all_count = count($all_member);// 查询满足要求的总记录数				$select_count = count($select_member);// 查询满足要求的总记录数		        $all_Page  = new Page($all_count,10);// 实例化分页类 传入总记录数		        $select_Page  = new Page($select_count,10);// 实例化分页类 传入总记录数		        if(empty($Page -> listRows)) $Page -> listRows=10;			    $all_member_reward = array_slice($all_member, $all_Page ->firstRow,$Page -> listRows,true);			    $select_member_reward = array_slice($select_member, $select_Page ->firstRow,$Page -> listRows,true);				$today = date('Y-m-d',time());			    $reward_ret = M('reward_status2')->where(array('date'=>$today))->find();			    if(!$reward_ret){					$reward_status = '一键分配';			    }else{			    	if($reward_ret['jackpot_status']==0){			    		$reward_status = '一键分配';			    	}else{			    		$reward_status = '已分配';			    	}			    }				$this->assign('reward_status',$reward_status);				$this->assign('total_coins',$total_coins);				$this->assign('able_coins',$able_coins);								if(!empty($_GET['typename'])){					$show = $select_Page->show();// 分页显示输出					$this->assign('page',$show);// 赋值分页输出					$this->assign('type',$_GET['type']);					$this->assign('typename',$_GET['typename']);					$this->assign('list',$select_member_reward);				}else{					$show = $all_Page->show();// 分页显示输出					$this->assign('page',$show);// 赋值分页输出					$this->assign('list',$all_member_reward);				}				$this->display();			}						/**			 * 新可提现fil币分币操作			 * 			 * */			public function new_change_reward_status(){				$Data = M('jinbidetail'); // 实例化Data数据对象				import("@.ORG.Util.Page");// 导入分页类		        $total_coins = C('fil_total_coins');		        $able_coins = $total_coins;				// $all_member = M('member')->alias('a')->join('ds_team_level_group  as b on a.level = b.level')->field('a.id,a.level,a.username,a.mobile,b.name as level_name')->order('level desc')->order('id')->limit($Page ->firstRow.','.$Page -> listRows)->select();							$all_member = M('member')->field('id,level,username,mobile')->group('level desc,id asc')->select();				$level_group = M('team_level_group')->field('id,level,name')->select();				$today = strtotime(date('Y-m-d',time()));				$where = '';				$where['kj_addtime'] = array('lt',$today);				$where['zt'] = 1;				$total_suanli = M('order')->where($where)->sum('lixi');				foreach ($all_member as &$vv) {					$vv['level_name'] = '无';					foreach ($level_group as &$vv2) {						if($vv['level']==$vv2['level']){							$vv['level_name'] = $vv2['name'];						}					}					$where['user_id'] = $vv['id'];					$suanli = M('order')->where($where)->sum('lixi');					$vv['suanli'] = !empty($suanli)?$suanli:0;					$vv['coin'] = floor(($able_coins/$total_suanli)*$vv['suanli'] * 10000) / 10000;				}					 		    $day = date('Y-m-d',time());	 		    $reward_status = M('reward_status2')->where(array('date'=>$day))->find();	 		    	 		    $data = array(	 		    	'total_coins' => $total_coins,	 		    	'date' => $day,	 		    	'jackpot_status' =>1,	 		    );	 		    if(!$reward_status){	 		    	M('reward_status2')->add($data);	 		    	foreach ($all_member as $value) {	 		    		if($value['coin']>0){	 		    			M('member')->where(array('id'=>$value['id']))->setInc('fil',$value['coin']);	 		    			jinbi($value['username'],$value['coin'],'可提产出',1,2,'fil');	 		    		}	 		    	}	 		    	echo json_encode(array('msg' => '分配成功','status'=>'已分配'));die;	 		    }else{	 		    	if($reward_status['jackpot_status']==0){	 		    		foreach ($all_member as $value) {	 		    			if($value['coin']>0){	 		    				M('member')->where(array('id'=>$value['id']))->setInc('fil',$value['coin']);	 		    				jinbi($value['username'],$value['coin'],'可提产出',1,2,'fil');	 		    			}	 		    		}	 			    	M('reward_status2')->where(array('date'=>$day))->save(array('jackpot_status' =>1));	 			    	echo json_encode(array('msg' => '分配成功','status'=>'已分配'));die;	 		    	}else{	 		    		echo json_encode(array('msg'=>'你已分配过','status'=>'已分配'));die;	 		    	}	 		    }	 		    	 		 }	}		?>