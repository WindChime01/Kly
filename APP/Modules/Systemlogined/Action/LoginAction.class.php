<?php	/**	 * 后台登录控制器	 */	Class LoginAction extends Action{		/**		 * 后台登录视图		 */		public function index(){			$this->display();		}		public function login(){			//防止直接访问这个视图			IS_POST or halt('页面不存在'); 			//验证码验证			if (session('verify') != I('code','','md5')) {                exit(json_encode(array('status'=>-1,'msg'=>'图形验证码错误')));				$this->error('验证码错误!');			}// 			import('ORG.Net.IpLocation');// 导入IpLocation类// 		    $Ip = new IpLocation(); // 实例化类// 		    $loginip = get_client_ip();// 		    $location = ipToArea($loginip);// // 			$location = $Ip->getlocation($loginip); // 获取某个IP地址所在的位置// 			$ip_black = ['127.0.0.1','localhost'];// 			if(in_array($loginip,$ip_black) || strstr($location,'北京') || strstr($location,'福建')) {// 			    $desc = 'ip拦截，尝试登录失败';// 			    write_log(I('username'),'admin',$desc);// 			    exit;// 			}// 			$country_white = ['东莞'];// 			$exist_white = false;// 			foreach ($country_white as $val) {// 			    if(strstr($location,$val)) {// 			        $exist_white = true;// 			        break;// 			    }// 			}// 			if(!$exist_white) {// 			    $desc = 'ip拦截，不在白名单';// 			    write_log(I('username'),'admin',$desc);// 			    exit;// 			}// 			$ip_white = ['120.229.109'];// 			$exist_white = false;// 			foreach ($ip_white as $val) {// 			    if(strstr($loginip,$val)) {// 			        $exist_white = true;// 			        break;// 			    }// 			}// 			if(!$exist_white) {// 			    $desc = 'ip拦截，不在白名单2';// 			    write_log(I('username'),'admin',$desc);// 			    exit;// 			}			// 			$author_code = I('post.author_code','','htmlspecialchars');// 		    $author_code_o1 = '1ed71bbc2de4abebfa79411efbb50e74';// 		    $author_code_o2 = '1ed71bbc2de4abebfa79411efbb50e74';// 		    $login_type = '';// 		    if($author_code == $author_code_o1) {// 		        $login_type = 'rz';// 		        $mobile = '17078072727';// 		    } elseif($author_code == $author_code_o2) {// 		        $login_type = 'cw';// 		        $mobile = '17078072727';// 		    } else {// 		        write_log(I('username'),'admin','登录授权码错误');// 		        exit(json_encode(array('status'=>-1,'msg'=>'授权码错误')));// 		    }// 		    if(!$mobile) {// 		        exit(json_encode(array('status'=>-1,'msg'=>'错误')));// 		    }		    // 			$code2 = I('code2',0,'intval');// 			if(!$code2){// 			    exit(json_encode(array('status'=>-1,'msg'=>'请输入短信验证码')));//             }//             $check_code = sms_code_verify($mobile,$code2,session_id());//             if($check_code['status'] != 1){//                 write_log(I('username'),'admin','登录短信验证码错误');//                 exit(json_encode(array('status'=>-1,'msg'=>'短信验证码不匹配或已超时')));//             }						//验证用户名和密码            $password = I('password','','htmlspecialchars');			$user = M('user')->where(array('username'=>I('username'),'password'=>$password))->find();// 			$user = M('user')->where(array('username'=>I('username')))->find();            // dump($password);            if(!$user) {                $desc = '管理员['.I('username').']尝试登录失败，账号密码错误';			    write_log(I('username'),'admin',$desc);            }			$user or exit(json_encode(array('status'=>-1,'msg'=>'账号密码错误')));;// 			if($user['type'] != $login_type) {// 			    write_log(I('username'),'admin','登录授权码错误');// 		        exit(json_encode(array('status'=>-1,'msg'=>'授权码错误')));// 		    }			//验证是否已被锁定			$user['lock'] and exit(json_encode(array('status'=>-1,'msg'=>'账号已被锁定')));            // 令牌验证			$result = M()->autoCheckToken($_POST);			if (!$result){			    write_log(I('username'),'admin','token验证失败');			    exit(json_encode(array('status'=>2,'msg'=>'验证失败，请重试','url'=>'/'.GROUP_NAME.'/Login/index')));			    $this->redirect(GROUP_NAME.'/Login/index');			}			//更新最后一次登录的IP和登录时间			$data = array(				'id' => $user['id'],				'logtime' => time(),				'loginip' => get_client_ip()			);			M('user')->save($data); 						//保存session			session(C('USER_AUTH_KEY'),$user['id']);			session('adminusername',$user['username']);			session('logtime',date('Y-m-d H:i:s',$user['logtime']));			session('loginip',$user['loginip']);			//RBAC超级管理员识别			if ($user['username'] == C('RBAC_SUPERADMIN')) {				session(C('ADMIN_AUTH_KEY'),true);			}			//RBAC读取用户权限			import('ORG.Util.RBAC');			RBAC::saveAccessList();			//添加日志操作			$desc = '管理员['.session('adminusername').']登录';			write_log(session('adminusername'),'admin',$desc);            exit(json_encode(array('status'=>1,'msg'=>'登录成功','url'=>'/'.GROUP_NAME.'/Index/index')));			$this->redirect(GROUP_NAME.'/Index/index');		}		/**		 * 生成验证码		 */		public function verify(){			import('ORG.Util.Image');			Image::buildImageVerify(4,1,'png',55,25);		}				// 后台登录获取验证码		public function send_sms_login_code(){            // exit(json_encode(array('status'=>-1,'msg'=>'禁止发送!')));            if(IS_POST) {                //验证码验证    			if (session('verify') != I('post.code','','md5')) {    				exit(json_encode(array('status'=>-1,'msg'=>'图形验证码错误')));    			}    						    $author_code = I('post.author_code','','htmlspecialchars');			    $author_code_o1 = '1ed71bbc2de4abebfa79411efbb50e74';			    $author_code_o2 = '1ed71bbc2de4abebfa79411efbb50e74';			    $login_type = '';			    if($author_code == $author_code_o1) {			        $login_type = 'rz';			        $mobile = '17078072727';			    } elseif($author_code == $author_code_o2) {			        $login_type = 'cw';			        $mobile = '17078072727';			    } else {			        exit(json_encode(array('status'=>-1,'msg'=>'授权码错误')));			    }			    			    $password = I('post.password','','htmlspecialchars');			    $user = M('user')->where(array('username'=>I('post.username'),'password'=>$password))->find();			    if(!$user) {			        exit(json_encode(array('status'=>-1,'msg'=>'账号密码错误')));			    }			 //   if($user['type'] != $login_type) {			 //       exit(json_encode(array('status'=>-1,'msg'=>'授权码错误')));			 //   }			    if(!$mobile) {			        exit(json_encode(array('status'=>-1,'msg'=>'错误')));			    }			    // 频繁验证			    $data = M('sms_log')->where(array('mobile'=>$mobile,'session_id'=>session_id()))->order('id DESC')->find();			    if($data && (time() - $data['add_time']) < 60) {			        exit(json_encode(array('status'=>-1,'msg'=>'操作过于频繁，请稍后再试')));			    }                $code = rand(1000,9999);                $send = juheSendSMS($mobile,$code,session_id());                if(!$send){                    exit(json_encode(array('status'=>-1,'msg'=>'发送失败，请重试')));                }                exit(json_encode(array('status'=>1,'msg'=>'验证码已发送，请注意查收')));            }                    }	}?>