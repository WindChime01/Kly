<?php  	/**	* 会员管理控制器	*/	class JackpotAction extends CommonAction{		    //会员等级分红列表页面		    public function jackpot_set_list(){		    			        $list = M('jackpot_set')->select();		        $list2 = M('team_level_group')->select();		        foreach ($list as &$value) {		        	foreach ($list2 as &$value2) {		        		if($value['level']==$value2['id']){		        			$value['level_name'] = $value2['name'];		        		}		        	}		        }		        // echo "<pre>";		        // var_dump($list);die;		        $this->assign('list',$list);		        $this->display('jackpot_set_list');		    }		    //添加会员等级分红的页面		    public function add_jackpot_set(){		    	$list = M('team_level_group')->select();		    	$this->assign('list',$list);		        $this->display('add_jackpot_set');		    }		    //添加团队表单处理		    public function addJackpotSetHandle(){		    	if(empty($_POST['level'])){		    		$this->error('请选择等级');die;		    	}		    	if(empty($_POST['rate'])){		    		$this->error('请填写比例');die;		    	} 		        if (M('jackpot_set')->add($_POST)) {		            //添加日志操作		            $desc = '添加一个新的会员等级分红';		            write_log(session('username'),'admin',$desc);		            $this->success('添加成功',U(GROUP_NAME.'/Jackpot/jackpot_set_list'));		        }else{		            $this->error('添加失败');		        }		    }		    //修改会员等级分红的页面		    public function	edit_jackpot_set(){		        // dump($_SESSION);		        $jackpot_set = M('jackpot_set')->where(array('id'=>I('id')))->find();		        $list = M('team_level_group')->select();		        $this->assign('jackpot_set',$jackpot_set);		        $this->assign('list',$list);		        $this->display('edit_jackpot_set');		    }		    //修改会员等级分红的处理		    public function editJackpotSetHandle(){		        $id = I('id',0,'intval');		        unset($_POST['id']);		        M('jackpot_set')->where(array('id'=>$id))->save($_POST);		        //添加日志		        $desc = '修改ID为'. id .'的会员等级分红';		        write_log(session('username'),'admin',$desc);		        $this->success('会员等级分红修改成功!',U(GROUP_NAME.'/Jackpot/jackpot_set_list'));		    }		    public function del_jackpot_set(){				$id = I('id');				$jackpot_set = M("jackpot_set");				$map['id'] = array('in',$id);				if($jackpot_set -> where($map) -> delete($id)){						//添加日志操作						$desc = '删除一个会员等级分红';					    write_log(session('username'),'admin',$desc);						$this->success('删除会员等级分红成功',U(GROUP_NAME .'/Jackpot/jackpot_set_list'));				}else{					$this -> error("删除失败");				}			}		/**		  * 加权平均列表		  * @param  $v1_condition              加权v1的条件		  * @param  $v2_condition              加权v2的条件		  * @param  $v3_condition              加权v3的条件		  * @param  $v4_condition              加权v4的条件		  * @return $all_member				   全部会员的信息		  * @return $large				       大区的业绩		  * @return $total				       总业绩		  * @return $little_sum				   小区的总和业绩		  */		public function jackpotlist(){			$Data = M('jinbidetail'); // 实例化Data数据对象			import("@.ORG.Util.Page");// 导入分页类	        $total_coins = C('total_coins');			$jackpot_list = M('jackpot_set')->select();			// $all_member = M('member')->alias('a')->join('ds_team_level_group  as b on a.level = b.level')->field('a.id,a.level,a.username,a.mobile,b.name as level_name')->order('level desc')->order('id')->limit($Page ->firstRow.','.$Page -> listRows)->select();						$all_member = M('member')->field('id,level,username,mobile,my_sl')->group('level desc,id asc')->select();			$level_group = M('team_level_group')->field('id,level,name')->select();			foreach ($all_member as &$vv) {				$vv['level_name'] = '无';				foreach ($level_group as &$vv2) {					if($vv['level']==$vv2['level']){						$vv['level_name'] = $vv2['name'];					}				}			}			// echo "<pre>";			// var_dump($all_member);die;			foreach ($jackpot_list as &$val) {				$level_count = '' ;				$level_count = M('member')->where(array('level'=>$val['level']))->count();				$val['count'] = $level_count;			}			$today = strtotime(date('Y-m-d',time()));			$where = '';			$where['kj_addtime'] = array('lt',$today);			$where['zt'] = 1;			$total_suanli = M('order')->where($where)->sum('lixi');			$select_member = array();			foreach ($all_member as &$value) {				$value['rate'] = 0;				$value['suanli'] = $value['my_sl'];				$value['coin'] = 0;				foreach ($jackpot_list as &$value2) {					if($value2['level']==$value['level']){						$value['rate'] = $value2['rate'];					}				}								$where['user_id'] = $value['id'];				$suanli = M('order')->where($where)->sum('lixi');				if(!empty($suanli)){					$value['suanli'] += $suanli;					$value['coin'] = round((C('total_coins')/$total_suanli)*$value['suanli'],2);				}				//查询				if(!empty($_POST['typename'])){					$type = $_POST['type'];					$typename = $_POST['typename'];					if($type ==1){						if($value["id"]==$typename){							$select_member[] = $value;						}					}elseif($type ==2){						if($value["level_name"]==$typename){							$select_member[] = $value;						}					}elseif($type ==3){						if($value["username"]==$typename){							$select_member[] = $value;						}					}elseif($type ==4){						if($value["mobile"]==$typename){							$select_member[] = $value;						}					}				}			}			$all_count = count($all_member);// 查询满足要求的总记录数			$select_count = count($select_member);// 查询满足要求的总记录数	        $all_Page  = new Page($all_count,10);// 实例化分页类 传入总记录数	        $select_Page  = new Page($select_count,10);// 实例化分页类 传入总记录数	        if(empty($Page -> listRows)) $Page -> listRows=10;		    $all_member_reward = array_slice($all_member, $all_Page ->firstRow,$Page -> listRows,true);		    $select_member_reward = array_slice($select_member, $select_Page ->firstRow,$Page -> listRows,true);			$today = date('Y-m-d',time());		    $reward_ret = M('reward_status')->where(array('date'=>$today))->find();		    if(!$reward_ret){				$reward_status = '一键分配';		    }else{		    	if($reward_ret['jackpot_status']==0){		    		$reward_status = '一键分配';		    	}else{		    		$reward_status = '已分配';		    	}		    }			$this->assign('reward_status',$reward_status);			$this->assign('total_coins',$total_coins);						if(!empty($_POST['typename'])){				$show = $select_Page->show();// 分页显示输出				$this->assign('page',$show);// 赋值分页输出				$this->assign('type',$_POST['type']);				$this->assign('typename',$_POST['typename']);				$this->assign('list',$select_member_reward);			}else{				$show = $all_Page->show();// 分页显示输出				$this->assign('page',$show);// 赋值分页输出				$this->assign('list',$all_member_reward);			}			$this->display();		}		/**		  * 加权等级升级		  * @param  $weighted_level            加权的级别		  * @param  $all_member                全部会员的信息		  * @param  $level_condition           加权等级的条件		  * @param  $v4_condition              加权v4的条件		  * @return $all_member				   全部会员的信息		  * @return $large				       大区的业绩		  * @return $total				       总业绩		  * @return $little_sum				   小区的总和业绩		  */		function level_num($weighted_level,$all_member,$level_condition,$level_num){			foreach ($all_member as $val2) {				$count = M('member')->where(array('parent_id'=>$val2['id'],'weighted_level'=>$level_condition))->count();				if($count>=$level_num){					$now_level = M('member')->where(array('id'=>$val2['id']))->getField('weighted_level');					if($now_level<$weighted_level){						M('member')->where(array('id'=>$val2['id']))->save(array('weighted_level'=>$weighted_level));					}				}			}		}		/**		  * 找出自己下面所有成员里业绩最好的成员的业绩		  * @param  $id               id		  * @return string		  */		 public function max($id){		     $list = M('member')->field('id,parent_id,achievement')->select();		     $push_member = M('member')->where(array("parent_id"=>$id))->select();		     foreach($push_member as $v){		         $push_member2['id'][]= $v['id'];		         $push_member2['achievement'][]= $v['achievement'];		     }		     $maxkey = array_search(max($push_member2['achievement']),$push_member2['achievement']);		     return $push_member2['achievement'][$maxkey];		 }		 		/**		 		  * 一键分配		 		  * @param  $total_coins               今日矿池代币总量		 		  * @param  $weighted_average_set      加权平均设置的数据		 		  * @param  $v4_condition              加权v4的条件		 		  * @return $all_member				   全部会员的信息		 		  * @return $num				   	   加权平均等级对应的人数		 		  * @return $rate				       加权平均等级对应的奖励比例		 		  * @return $reward				       加权平均等级对应的奖励总和		 		  * @return $weighted_average		   加权平均对应等级下每个人能分到的值		 		  * @return string		 		  */		 		 public function change_reward_status(){  					$total_coins = C('total_coins');  					$jackpot_list = M('jackpot_set')->select();  					$all_member = M('member')->alias('a')->join('ds_team_level_group  as b on a.level = b.level')->field('a.id,a.level,a.username,a.mobile,b.name as level_name')->order('level desc')->select();  					foreach ($jackpot_list as &$val) {  						$level_count = '' ;  						$level_count = M('member')->where(array('level'=>$val['level']))->count();  						$val['count'] = $level_count;  					}  					$today = strtotime(date('Y-m-d',time()));  					$where = '';  					$where['kj_addtime'] = array('lt',$today);  					$where['zt'] = 1;  					$total_suanli = M('order')->where($where)->sum('lixi');  					foreach ($all_member as &$value) {  						$value['rate'] = 0;  						$value['reword'] = 0;  						$value['suanli'] = $value['my_sl'];  						$value['coin'] = 0;  						foreach ($jackpot_list as &$value2) {  							if($value2['level']==$value['level']){  								$value['rate'] = $value2['rate'];  								$value['reword'] = $value2['rate']*$total_coins/$value2['count']/100;  							}  						}  						$where['user_id'] = $value['id'];  						$suanli = M('order')->where($where)->sum('lixi');  						if(!empty($suanli)){  							$value['suanli'] += $suanli;  							$value['coin'] = round((C('total_coins')/$total_suanli)*$value['suanli'],4);  						}   					}		 		    $day = date('Y-m-d',time());		 		    $reward_status = M('reward_status')->where(array('date'=>$day))->find();		 		    		 		    $data = array(		 		    	'total_coins' => $total_coins,		 		    	'date' => $day,		 		    	'jackpot_status' =>1,		 		    );		 		    if(!$reward_status){		 		    	M('reward_status')->add($data);		 		    	foreach ($all_member as $value) {		 		    		if($value['coin']>0){		 		    			M('member')->where(array('id'=>$value['id']))->setInc('ipfs',$value['coin']);		 		    			jinbi($value['username'],$value['coin'],'每日矿池收益',1,5,'ipfs');		 		    		}		 		    	}		 		    	echo json_encode(array('msg' => '分配成功','status'=>'已分配'));die;		 		    }else{		 		    	if($reward_status['jackpot_status']==0){		 		    		foreach ($all_member as $value) {		 		    			if($value['coin']>0){		 		    				M('member')->where(array('id'=>$value['id']))->setInc('ipfs',$value['coin']);		 		    				jinbi($value['username'],$value['coin'],'每日矿池收益',1,5,'ipfs');		 		    			}		 		    		}		 			    	M('reward_status')->where(array('date'=>$day))->save(array('jackpot_status' =>1));		 			    	echo json_encode(array('msg' => '分配成功','status'=>'已分配'));die;		 		    	}else{		 		    		echo json_encode(array('msg'=>'你已分配过','status'=>'已分配'));die;		 		    	}		 		    }		 		    		 		 }			//导出全部/excel	        public function excel() {				$Data = M('jinbidetail'); // 实例化Data数据对象				import("@.ORG.Util.Page");// 导入分页类								$count = M('member')->count();// 查询满足要求的总记录数		        $Page  = new Page($count,10);// 实例化分页类 传入总记录数		        $total_coins = C('total_coins');				$jackpot_list = M('jackpot_set')->select();				// $all_member = M('member')->alias('a')->join('ds_team_level_group  as b on a.level = b.level')->field('a.id,a.level,a.username,a.mobile,b.name as level_name')->order('level desc')->order('id')->limit($Page ->firstRow.','.$Page -> listRows)->select();							$all_member = M('member')->field('id,level,username,mobile')->group('level desc,id asc')->select();				$level_group = M('team_level_group')->field('id,level,name')->select();				foreach ($all_member as &$vv) {					$vv['level_name'] = '无';					foreach ($level_group as &$vv2) {						if($vv['level']==$vv2['level']){							$vv['level_name'] = $vv2['name'];						}					}				}				foreach ($jackpot_list as &$val) {					$level_count = '' ;					$level_count = M('member')->where(array('level'=>$val['level']))->count();					$val['count'] = $level_count;				}				$today = strtotime(date('Y-m-d',time()));				$where = '';				$where['kj_addtime'] = array('lt',$today);				$where['zt'] = 1;				$total_suanli = M('order')->where($where)->sum('lixi');				$select_member = array();				foreach ($all_member as &$value) {					$value['rate'] = 0;					$value['reword'] = 0;					$value['suanli'] = $value['my_sl'];					$value['coin'] = 0;					foreach ($jackpot_list as &$value2) {						if($value2['level']==$value['level']){							$value['rate'] = $value2['rate'];							$value['reword'] = $value2['rate']*$total_coins/$value2['count']/100;						}					}					$today = date("Y-m-d",time());					$where['user_id'] = $value['id'];					$suanli = M('order')->where($where)->sum('lixi');					if(!empty($suanli)){						$value['suanli'] += $suanli;						$value['coin'] = round((C('total_coins')/$total_suanli)*$value['suanli'],4);					}					//查询					if(!empty($_POST['typename'])){						$type = $_POST['type'];						$typename = $_POST['typename'];						if($type ==1){							if($value["id"]==$typename){								$select_member[] = $value;							}						}elseif($type ==2){							if($value["level_name"]==$typename){								$select_member[] = $value;							}						}elseif($type ==3){							if($value["username"]==$typename){								$select_member[] = $value;							}						}elseif($type ==4){							if($value["mobile"]==$typename){								$select_member[] = $value;							}						}					}				}				if($_GET['type']==1){					if(!empty($_POST['typename'])){						$list = $select_member;					}else{						$list = $all_member;					}				}else{					$list = $all_member;				}	            require_once ROOT_PATH . '/extend/lib/PHPExcel/Classes/PHPExcel.php';	            $objPHPExcel = new \PHPExcel();	            //列宽 自适应	            $objPHPExcel->getActiveSheet()->getColumnDimension('A')->setWidth(10);	            $objPHPExcel->getActiveSheet()->getColumnDimension('B')->setWidth(10);	            $objPHPExcel->getActiveSheet()->getColumnDimension('C')->setAutoSize(true);	            $objPHPExcel->getActiveSheet()->getColumnDimension('D')->setAutoSize(true);	            $objPHPExcel->getActiveSheet()->getColumnDimension('E')->setWidth(10);	            $objPHPExcel->getActiveSheet()->getColumnDimension('F')->setWidth(15);	            $objPHPExcel->getActiveSheet()->getColumnDimension('G')->setAutoSize(true);	            //根据excel坐标，添加数据	            $objPHPExcel->setActiveSheetIndex(0)	                ->setCellValue('A1', '编号')	                ->setCellValue('B1', '级别')	                ->setCellValue('C1', '姓名')	                ->setCellValue('D1', '手机号码')	                ->setCellValue('E1', '昨天算力')	                ->setCellValue('F1', '昨天挖到的币');	            foreach($list as $key=>$val){	                $num = $key +2;	                $A = 'A'.$num;	                $B = 'B'.$num;	                $C = 'C'.$num;	                $D = 'D'.$num;	                $E = 'E'.$num;	                $F = 'F'.$num;	                $G = 'G'.$num;	                $objPHPExcel->setActiveSheetIndex(0)	                    ->setCellValue($A,$val['id'])	                    ->setCellValue($B,$val['level_name'])	                    ->setCellValue($C,$val['username'])	                    ->setCellValue($D,$val['mobile'])	                    ->setCellValue($E,$val['suanli'])	                    ->setCellValue($F,$val['coin']);	            }	            $showtime = date('Ymdhis');	            $file_name = '矿池代币分红列表'.$showtime.'.xlsx';	            /*生成文件并下载*/	            header('Content-Type: application/vnd.ms-excel');	            // header('Content-Disposition: attachment;filename="'.'data.xlsx"');	            header('Content-Disposition: attachment;filename="'.$file_name.'"');	            header('Cache-Control: max-age=0');	            $objWriter = \PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel2007');	            $objWriter->save('php://output');	            #释放内存	            unset($objWriter);	            unset($objPHPExcel);	            $desc = '导出全部订单';				write_log(session('adminusername'),'admin',$desc);	        }	}		?>